[{"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/index.tsx":"1","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/reportWebVitals.ts":"2","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/wdyr.ts":"3","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/App.tsx":"4","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/components/Profiler.tsx":"5","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/context/index.tsx":"6","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/context/AuthContext.tsx":"7","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/components/index.ts":"8","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/unAuthPage/index.tsx":"9","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/authPage/index.tsx":"10","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/components/FullError.tsx":"11","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/components/Container.tsx":"12","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/components/Loading.tsx":"13","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/components/ErrorBoundary.tsx":"14","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/components/pin.tsx":"15","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/components/IdSelect.tsx":"16","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/components/Row.tsx":"17","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/utils/useAsync.ts":"18","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/utils/http.ts":"19","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/api/AuthProvider.ts":"20","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/authPage/components/Header.tsx":"21","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/unAuthPage/RegisterPage.tsx":"22","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/unAuthPage/LoginPage.tsx":"23","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/utils/index.ts":"24","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/projectList/components/ProjectModal.tsx":"25","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/authPage/components/UserPopover.tsx":"26","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/authPage/components/ProjectPopover.tsx":"27","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/project/index.tsx":"28","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/projectList/index.tsx":"29","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/consts/index.ts":"30","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/api/Users.ts":"31","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/api/Projects.ts":"32","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/projectList/components/SearchList.tsx":"33","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/projectList/components/SearchPannel.tsx":"34","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/project/utils/index.ts":"35","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/utils/useDocumentTitle.ts":"36","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/projectList/utils/index.ts":"37","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/utils/useOptimistic.ts":"38","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/components/UserSelect.tsx":"39","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/utils/useUrlQueryParam.ts":"40","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/taskGroup/index.tsx":"41","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/projectBoard/index.tsx":"42","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/taskGroup/components/CreateEpic.tsx":"43","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/projectBoard/utils/index.ts":"44","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/taskGroup/utils/index.ts":"45","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/api/Task.ts":"46","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/api/Epic.ts":"47","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/projectBoard/components/CreateKanban.tsx":"48","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/projectBoard/components/EditTask.tsx":"49","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/components/DragAndDrop.tsx":"50","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/api/Kanban.ts":"51","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/projectBoard/components/SearchPannel.tsx":"52","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/projectBoard/components/KanbanColumn.tsx":"53","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/components/TaskTypeSelect.tsx":"54","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/projectBoard/components/Mark.tsx":"55","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/projectBoard/components/TaskTypeIcon.tsx":"56","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/projectBoard/components/CreateTask.tsx":"57"},{"size":964,"mtime":1665302354706,"results":"58","hashOfConfig":"59"},{"size":425,"mtime":1665302359347,"results":"60","hashOfConfig":"59"},{"size":364,"mtime":1665302360768,"results":"61","hashOfConfig":"59"},{"size":816,"mtime":1665302354704,"results":"62","hashOfConfig":"59"},{"size":1092,"mtime":1665302342972,"results":"63","hashOfConfig":"59"},{"size":558,"mtime":1665302347679,"results":"64","hashOfConfig":"59"},{"size":1991,"mtime":1665302347144,"results":"65","hashOfConfig":"59"},{"size":441,"mtime":1665302344308,"results":"66","hashOfConfig":"59"},{"size":2383,"mtime":1665302337227,"results":"67","hashOfConfig":"59"},{"size":1098,"mtime":1665302354841,"results":"68","hashOfConfig":"59"},{"size":713,"mtime":1665302345801,"results":"69","hashOfConfig":"59"},{"size":304,"mtime":1665302345799,"results":"70","hashOfConfig":"59"},{"size":426,"mtime":1665302346043,"results":"71","hashOfConfig":"59"},{"size":884,"mtime":1665302347141,"results":"72","hashOfConfig":"59"},{"size":567,"mtime":1665302345859,"results":"73","hashOfConfig":"59"},{"size":1293,"mtime":1665302343890,"results":"74","hashOfConfig":"59"},{"size":942,"mtime":1665302342731,"results":"75","hashOfConfig":"59"},{"size":2725,"mtime":1665302351769,"results":"76","hashOfConfig":"59"},{"size":1419,"mtime":1665302348993,"results":"77","hashOfConfig":"59"},{"size":1343,"mtime":1665302335376,"results":"78","hashOfConfig":"59"},{"size":1628,"mtime":1665302351871,"results":"79","hashOfConfig":"59"},{"size":1390,"mtime":1665302336766,"results":"80","hashOfConfig":"59"},{"size":1438,"mtime":1665302340583,"results":"81","hashOfConfig":"59"},{"size":4505,"mtime":1665302348936,"results":"82","hashOfConfig":"59"},{"size":3032,"mtime":1665302351839,"results":"83","hashOfConfig":"59"},{"size":921,"mtime":1665302350523,"results":"84","hashOfConfig":"59"},{"size":1302,"mtime":1665302350148,"results":"85","hashOfConfig":"59"},{"size":1589,"mtime":1665302350154,"results":"86","hashOfConfig":"59"},{"size":1661,"mtime":1665302339687,"results":"87","hashOfConfig":"59"},{"size":121,"mtime":1665319876557,"results":"88","hashOfConfig":"59"},{"size":438,"mtime":1665302343222,"results":"89","hashOfConfig":"59"},{"size":1846,"mtime":1665302333806,"results":"90","hashOfConfig":"59"},{"size":3308,"mtime":1665302353373,"results":"91","hashOfConfig":"59"},{"size":1628,"mtime":1665302353739,"results":"92","hashOfConfig":"59"},{"size":317,"mtime":1665302336686,"results":"93","hashOfConfig":"59"},{"size":846,"mtime":1665302348642,"results":"94","hashOfConfig":"59"},{"size":1654,"mtime":1665302353388,"results":"95","hashOfConfig":"59"},{"size":1972,"mtime":1665302347146,"results":"96","hashOfConfig":"59"},{"size":450,"mtime":1665302344579,"results":"97","hashOfConfig":"59"},{"size":1216,"mtime":1665302348824,"results":"98","hashOfConfig":"59"},{"size":2762,"mtime":1665302336689,"results":"99","hashOfConfig":"59"},{"size":2436,"mtime":1665302360809,"results":"100","hashOfConfig":"59"},{"size":2265,"mtime":1665302351934,"results":"101","hashOfConfig":"59"},{"size":5335,"mtime":1665302339800,"results":"102","hashOfConfig":"59"},{"size":356,"mtime":1665302348685,"results":"103","hashOfConfig":"59"},{"size":2159,"mtime":1665302334992,"results":"104","hashOfConfig":"59"},{"size":1035,"mtime":1665302335068,"results":"105","hashOfConfig":"59"},{"size":940,"mtime":1665302339761,"results":"106","hashOfConfig":"59"},{"size":2326,"mtime":1665302341246,"results":"107","hashOfConfig":"59"},{"size":1707,"mtime":1665302345845,"results":"108","hashOfConfig":"59"},{"size":1622,"mtime":1665302333786,"results":"109","hashOfConfig":"59"},{"size":1419,"mtime":1665302338513,"results":"110","hashOfConfig":"59"},{"size":3270,"mtime":1665302341076,"results":"111","hashOfConfig":"59"},{"size":459,"mtime":1665302344294,"results":"112","hashOfConfig":"59"},{"size":602,"mtime":1665302338056,"results":"113","hashOfConfig":"59"},{"size":547,"mtime":1665302338044,"results":"114","hashOfConfig":"59"},{"size":1238,"mtime":1665302339727,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"ge8bro",{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"118"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"118"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"118"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"118"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"118"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"118"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"118"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"118"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"118"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"118"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/index.tsx",[],["241","242"],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/reportWebVitals.ts",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/wdyr.ts",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/App.tsx",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/components/Profiler.tsx",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/context/index.tsx",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/context/AuthContext.tsx",["243"],"/*\n * @Descripttion: your project\n * @Author: huangjitao\n * @Date: 2021-04-22 22:16:18\n * @Function: use of this file\n */\nimport { User } from \"types/User\";\nimport React, { ReactNode, useState } from \"react\";\nimport * as auth from \"api/AuthProvider\";\nimport { useMount } from \"utils\";\nimport { http } from \"utils/http\";\nimport { useAsync } from \"utils/useAsync\";\nimport { FullError, Loading } from \"components\";\nimport { useQueryClient } from \"react-query\";\n\nconst bootStrapUser = async () => {\n  let user = null;\n  const token = auth.getToken();\n  if (token) {\n    const data = await http(\"me\", { token });\n    user = data.user;\n  }\n  return user;\n};\n\nconst AuthContext = React.createContext<\n  | {\n      user: User | null;\n      login: (form: auth.IAuthParam) => Promise<void>;\n      register: (form: auth.IAuthParam) => Promise<void>;\n      logout: () => Promise<void>;\n    }\n  | undefined\n>(undefined);\n\nAuthContext.displayName = \"AuthContext\";\n\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\n  const {\n    run,\n    isLoading,\n    isError,\n    error,\n    isIdle,\n    data: user,\n    setData: setUser,\n  } = useAsync<User | null>();\n  const queryClient = useQueryClient();\n  const login = (form: auth.IAuthParam) => auth.login(form).then(setUser);\n  const register = (form: auth.IAuthParam) => auth.register(form).then(setUser);\n  const logout = () =>\n    auth.logout().then(() => {\n      setUser(null);\n      queryClient.clear();\n    });\n\n  useMount(() => {\n    // bootStrapUser().then(setUser);\n    run(bootStrapUser());\n  });\n\n  if (isIdle || isLoading) {\n    return <Loading />;\n  }\n\n  if (isError) {\n    return <FullError error={error} />;\n  }\n\n  return (\n    <AuthContext.Provider\n      children={children}\n      value={{ user, login, register, logout }}\n    />\n  );\n};\n\nexport const useAuth = () => {\n  const context = React.useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth必须在AuthProvider中使用\");\n  }\n  return context;\n};\n","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/components/index.ts",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/unAuthPage/index.tsx",["244"],"/*\n * @Descripttion: 未认证页面入口\n * @Author: huangjitao\n * @Date: 2021-04-17 19:00:52\n * @Function: use of this file\n */\nimport { Button, Card, Divider, Typography } from \"antd\";\nimport { useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport LoginPage from \"./LoginPage\";\nimport RegisterPage from \"./RegisterPage\";\nimport logo from \"assets/logo.svg\";\nimport left from \"assets/left.svg\";\nimport right from \"assets/right.svg\";\n// import { useDocumentTitle } from \"utils/useDocumentTitle\";\nimport { ErrorBox } from \"components/FullError\";\n\nconst UnAutnPage = () => {\n  const [isRegister, setIsRegister] = useState<boolean>(false);\n  const [error, setError] = useState<Error | null>(null);\n\n  // const title = isRegister ? '注册页面' : '登录页面'\n  // useDocumentTitle(title, false)\n\n  return (\n    <Container>\n      <Header />\n      <Background />\n      <ShadowCard>\n        <Title>{isRegister ? \"注 册\" : \"登 录\"}</Title>\n        {error ? <ErrorBox error={error} /> : null}\n        {isRegister ? (\n          <RegisterPage onError={setError} />\n        ) : (\n          <LoginPage onError={setError} />\n        )}\n        <Divider />\n        <Button\n          type=\"link\"\n          onClick={() => {\n            setIsRegister(!isRegister);\n          }}\n        >\n          {isRegister ? \"已有账号？直接登录\" : \"没有账号？注册账号\"}\n        </Button>\n      </ShadowCard>\n    </Container>\n  );\n};\n\nexport default UnAutnPage;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-height: 100vh;\n`;\n\nconst Header = styled.div`\n  background: url(${logo}) no-repeat center;\n  padding: 5rem 0;\n  background-size: 8rem;\n  width: 100%;\n`;\n\nconst ShadowCard = styled(Card)`\n  width: 40rem;\n  min-height: 56rem;\n  padding: 3.2rem 4rem;\n  border-radius: 0.3rem;\n  box-sizing: border-box;\n  box-shadow: rgba(0, 0, 0, 0.1) 0 0 10px;\n  text-align: center;\n`;\n\nconst Background = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: left bottom, right bottom;\n  background-size: calc(((100vw - 40rem) / 2) - 3.2rem),\n    calc(((100vw - 40rem) / 2) - 3.2rem), cover;\n  background-image: url(${left}), url(${right});\n`;\n\nconst Title = styled.h2`\n  margin-bottom: 2.4rem;\n  color: rgb(94, 108, 132);\n`;\n","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/authPage/index.tsx",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/components/FullError.tsx",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/components/Container.tsx",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/components/Loading.tsx",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/components/ErrorBoundary.tsx",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/components/pin.tsx",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/components/IdSelect.tsx",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/components/Row.tsx",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/utils/useAsync.ts",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/utils/http.ts",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/api/AuthProvider.ts",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/authPage/components/Header.tsx",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/unAuthPage/RegisterPage.tsx",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/unAuthPage/LoginPage.tsx",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/utils/index.ts",["245"],"/*\n * @Descripttion: 简单的自定义hook和工具类函数\n * @Author: huangjitao\n * @Date: 2021-04-11 21:24:19\n * @Function: use of this file\n */\nimport { useCallback, useEffect, useReducer, useRef, useState } from \"react\";\n\nconst isFalsy = (value: unknown) => (value === 0 ? false : !value);\n\nexport const cleanObject = (object: { [key: string]: unknown }) => {\n  const temp = { ...object };\n  Object.keys(temp).forEach((key) => {\n    const value = temp[key];\n    if (isFalsy(value)) {\n      delete temp[key];\n    }\n  });\n  return temp;\n};\n\n/**\n * 仅组件挂载时的副作用\n * @param callback 回调函数\n */\nexport const useMount = (callback: () => void) => {\n  useEffect(() => {\n    callback();\n  }, []);\n};\n\n/**\n * 节流函数\n * @param value 输入数值\n * @param delay 时延\n * @returns debounceValue：节流处理后的输入值\n */\nexport const useDebounce = <T>(value: T, delay: number) => {\n  const [debounceValue, setDebounceValue] = useState(value);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebounceValue(value);\n    }, delay);\n    return () => clearTimeout(timer);\n  }, [value, delay]);\n  return debounceValue;\n};\n\n/**\n * 返回组件的挂载状态\n * @returns mountedRef：如果还没挂载或者已经卸载，返回false；反之，返回true\n */\nexport const useMountedRef = () => {\n  const mountedRef = useRef(false);\n  useEffect(() => {\n    mountedRef.current = true;\n    return () => {\n      mountedRef.current = false;\n    };\n  }, []);\n  return mountedRef;\n};\n\nexport const resetRoute = () => (window.location.href = window.location.origin);\n\n/**\n * @function 自定义useArray练习，用于操作数组。\n * @param val 初始化数组\n * @returns clear：清空数组；removeIndex：移除数组特定位置的元素；add：添加元素\n */\nexport const useArray = <T>(val: T[]) => {\n  const [value, setValue] = useState(val);\n  const clear = () => {\n    setValue([]);\n  };\n  const removeIndex = (index: number) => {\n    const temp = [...value];\n    temp.splice(index, 1);\n    setValue(temp);\n  };\n  const add = (thing: T) => {\n    const temp = [...value];\n    temp.push(thing);\n    setValue(temp);\n  };\n  return {\n    value,\n    clear,\n    removeIndex,\n    add,\n  };\n};\n\n/**\n * @function 自定义useUndo练习\n * @param {T}initialPresent 初始值\n * @returns\n */\n\nconst UNDO = \"UNDO\";\nconst REDO = \"REDO\";\nconst SET = \"SET\";\nconst RESET = \"RESET\";\n\ntype State<T> = {\n  past: T[]; // 存放历史值\n  present: T; // 当前值\n  future: T[]; // 存放undo值，用于取消撤销\n};\n\ntype Action<T> = {\n  newPresent?: T;\n  type: typeof UNDO | typeof REDO | typeof SET | typeof RESET;\n};\n\nconst undoReducer = <T>(state: State<T>, action: Action<T>) => {\n  const { past, present, future } = state;\n  const { newPresent } = action;\n  switch (action.type) {\n    case UNDO:\n      if (past.length === 0) return state;\n      const previous = past[past.length - 1];\n      const newPast = past.slice(0, past.length - 1);\n      return {\n        past: newPast,\n        present: previous,\n        future: [present, ...future],\n      };\n    case REDO:\n      if (future.length === 0) return state;\n      const next = future[0];\n      const newFuture = future.slice(1);\n      return {\n        past: [...past, present],\n        present: next,\n        future: newFuture,\n      };\n    case SET:\n      if (newPresent === present) return state;\n      return {\n        past: [...past, present],\n        present: newPresent,\n        future: [],\n      };\n    case RESET:\n      return {\n        past: [],\n        present: newPresent,\n        future: [],\n      };\n    default:\n      return state;\n  }\n};\nexport const useUndo = <T>(initialPresent: T) => {\n  const [state, dispatch] = useReducer(undoReducer, {\n    past: [],\n    present: initialPresent,\n    future: [],\n  } as State<T>);\n\n  const canUndo = state.past.length !== 0;\n  const canRedo = state.future.length !== 0;\n\n  /**\n   * 撤销\n   */\n  const undo = useCallback(() => {\n    dispatch({ type: UNDO });\n  }, []);\n\n  /**\n   * 取消撤销\n   */\n  const redo = useCallback(() => {\n    dispatch({ type: REDO });\n  }, []);\n\n  /**\n   * 指定为特定值\n   */\n  const set = useCallback((newPresent: T) => {\n    dispatch({ type: SET, newPresent: newPresent });\n  }, []);\n\n  /**\n   * 重置为初始值\n   */\n  const reset = useCallback(() => {\n    dispatch({ type: RESET, newPresent: initialPresent });\n  }, [initialPresent]);\n\n  return [state, { undo, redo, set, reset, canUndo, canRedo }] as const;\n};\n","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/projectList/components/ProjectModal.tsx",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/authPage/components/UserPopover.tsx",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/authPage/components/ProjectPopover.tsx",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/project/index.tsx",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/projectList/index.tsx",["246","247"],"/*\n * @Descripttion: 项目列表页面主入口\n * @Author: huangjitao\n * @Date: 2021-04-17 19:00:52\n * @Function: use of this file\n */\nimport React, { useState } from \"react\";\nimport SearchList from \"./components/SearchList\";\nimport SearchPannel from \"./components/SearchPannel\";\nimport { useDebounce } from \"utils\";\nimport { useUsers } from \"api/Users\";\nimport { useProjects } from \"api/Projects\";\nimport { Button, Input } from \"antd\";\nimport { useDocumentTitle } from \"utils/useDocumentTitle\";\nimport { useProjectModal, useProjectParamsSearch } from \"./utils\";\nimport { Container, Row } from \"components\";\nimport { ErrorBox } from \"components/FullError\";\n\nconst ProjectList = () => {\n  const [param, setParam] = useProjectParamsSearch();\n  const { data: users } = useUsers();\n  const { isLoading, error, data: lists } = useProjects(\n    useDebounce(param, 500)\n  );\n  const { openModal } = useProjectModal();\n\n  useDocumentTitle(\"项目列表\", false);\n\n  // const [state, setstate] = useState('1')\n\n  return (\n    <Container>\n      <Row justifyContent=\"space-between\" style={{ marginBottom: 13 }}>\n        <h2>项目列表</h2>\n        <Button style={{ padding: 0 }} onClick={openModal} type={\"link\"}>\n          创建项目\n        </Button>\n      </Row>\n      {/* <Input value={state} onChange={(e) => setstate(e.target.value)} /> */}\n      <SearchPannel users={users || []} param={param} setParam={setParam} />\n      <ErrorBox error={error} />\n      <SearchList\n        loading={isLoading}\n        dataSource={lists || []}\n        users={users || []}\n      />\n    </Container>\n  );\n};\n\n// ProjectList.whyDidYouRender = true\n\nexport default ProjectList;\n","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/consts/index.ts",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/api/Users.ts",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/api/Projects.ts",["248","249","250"],"/*\n * @Descripttion: 项目相关请求封装\n * @Author: huangjitao\n * @Date: 2021-04-22 22:16:18\n * @Function: use of this file\n */\nimport { Project } from \"types/Project\";\nimport { useProjectParamsSearch } from \"pages/projectList/utils\";\nimport { QueryKey, useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { cleanObject } from \"utils\";\nimport { useHttp } from \"utils/http\";\nimport { useDeleteOptimistic, useEditOptimistic } from \"utils/useOptimistic\";\nimport useUrlQueryParam from \"utils/useUrlQueryParam\";\n\nexport const useProjects = (params?: Partial<Project>) => {\n  const httpFetch = useHttp();\n  return useQuery<Project[]>([\"projects\", params], () =>\n    httpFetch(\"projects\", { data: cleanObject(params || {}) })\n  );\n};\n\nexport const useEditProject = (queryKey: QueryKey) => {\n  const httpFetch = useHttp();\n  return useMutation(\n    (params: Partial<Project>) =>\n      httpFetch(`projects/${params.id}`, {\n        data: params,\n        method: \"PATCH\",\n      }),\n    useEditOptimistic(queryKey)\n  );\n};\n\nexport const useAddProject = (queryKey: QueryKey) => {\n  const httpFetch = useHttp();\n  return useMutation(\n    (params: Partial<Project>) =>\n      httpFetch(`projects`, {\n        data: params,\n        method: \"POST\",\n      }),\n    useEditOptimistic(queryKey)\n  );\n};\n\nexport const useDeleteProject = (queryKey: QueryKey) => {\n  const httpFetch = useHttp();\n  return useMutation(\n    ({ id }: { id: number }) =>\n      httpFetch(`projects/${id}`, {\n        method: \"DELETE\",\n      }),\n    useDeleteOptimistic(queryKey)\n  );\n};\n\n/**\n *\n * @param id 根据id请求project详细信息\n * @returns\n */\nexport const useProject = (id?: number) => {\n  const httpFetch = useHttp();\n  return useQuery<Project>(\n    [\"project\", { id }],\n    () => httpFetch(`projects/${id}`),\n    {\n      enabled: Boolean(id),\n    }\n  );\n};\n","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/projectList/components/SearchList.tsx",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/projectList/components/SearchPannel.tsx",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/project/utils/index.ts",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/utils/useDocumentTitle.ts",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/projectList/utils/index.ts",["251"],"/*\n * @Descripttion: 与项目列表有关的工具函数\n * @Author: huangjitao\n * @Date: 2021-04-28 20:38:45\n * @Function: use of this file\n */\n\nimport { useProject } from \"api/Projects\";\nimport { useMemo } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport useUrlQueryParam, { useSetUrlSearchParam } from \"utils/useUrlQueryParam\";\n\n/**\n * 使用useUrlQueryParam，从url中获取的参数值永远是string类型\n */\nexport const useProjectParamsSearch = () => {\n  const [param, setParam] = useUrlQueryParam([\"name\", \"personId\"]);\n  return [\n    useMemo(\n      () => ({ ...param, personId: Number(param.personId) || undefined }),\n      [param]\n    ),\n    setParam,\n  ] as const;\n};\n\nexport const useProjectsQueryKey = () => {\n  const [params] = useProjectParamsSearch();\n  return [\"projects\", params];\n};\n\nexport const useProjectModal = () => {\n  const [{ projectCreate }, setProjectCreate] = useUrlQueryParam([\n    \"projectCreate\",\n  ]);\n  const [{ editingProjectId }, setEditingProjectId] = useUrlQueryParam([\n    \"editingProjectId\",\n  ]);\n\n  const { data: editingProject, isLoading } = useProject(\n    Number(editingProjectId)\n  );\n\n  const setUrlSearchParam = useSetUrlSearchParam();\n  const close = () =>\n    setUrlSearchParam({ editingProjectId: \"\", projectCreate: \"\" });\n  const open = () => setProjectCreate({ projectCreate: true });\n  const startEdit = (id: number) =>\n    setEditingProjectId({ editingProjectId: id });\n\n  return {\n    projectModalOpen: projectCreate === \"true\" || Boolean(editingProjectId),\n    closeModal: close,\n    openModal: open,\n    editingProject,\n    startEdit,\n    isLoading,\n  } as const;\n};\n","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/utils/useOptimistic.ts",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/components/UserSelect.tsx",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/utils/useUrlQueryParam.ts",["252","253"],"/*\n * @Descripttion: 浏览器url查询hook\n * @Author: huangjitao\n * @Date: 2021-04-26 07:33:50\n * @Function: use of this file\n */\nimport { useMemo } from \"react\";\nimport { URLSearchParamsInit, useSearchParams } from \"react-router-dom\";\nimport { cleanObject } from \"utils\";\n\nexport const useSetUrlSearchParam = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  return (params: Partial<{ [key in string]: unknown }>) => {\n    const o = cleanObject({\n      ...Object.fromEntries(searchParams),\n      ...params,\n    }) as URLSearchParamsInit;\n    return setSearchParams(o);\n  };\n};\n\nconst useUrlQueryParam = <K extends string>(keys: K[]) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const setUrlSearchParam = useSetUrlSearchParam();\n  return [\n    useMemo(() => {\n      return keys.reduce((pre, key) => {\n        return { ...pre, [key]: searchParams.get(key) || \"\" };\n      }, {} as { [key in K]: string });\n    }, [searchParams]),\n    (params: Partial<{ [key in K]: unknown }>) => {\n      // iterator\n      // iterator: https://codesandbox.io/s/upbeat-wood-bum3j?file=/src/index.js\n      setUrlSearchParam(params);\n    },\n  ] as const;\n};\n\nexport default useUrlQueryParam;\n","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/taskGroup/index.tsx",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/projectBoard/index.tsx",["254"],"/*\n * @Descripttion: 任务看板\n * @Author: huangjitao\n * @Date: 2021-04-24 21:01:29\n * @Function: use of this file\n */\n\nimport styled from \"@emotion/styled\";\nimport { useDocumentTitle } from \"utils/useDocumentTitle\";\nimport { KanbanColumn } from \"pages/projectBoard/components/KanbanColumn\";\nimport {\n  useDragEnd,\n  useKanbansSearchParams,\n  useProjectInUrl,\n  useTasksSearchParams,\n} from \"pages/projectBoard/utils\";\nimport { useKanbans } from \"api/Kanban\";\nimport { SearchPannel } from \"pages/projectBoard/components/SearchPannel\";\nimport { Container } from \"components\";\nimport { CreateKanban } from \"./components/CreateKanban\";\nimport { useTasks } from \"api/Task\";\nimport { Spin } from \"antd\";\nimport { EditTask } from \"./components/EditTask\";\nimport { DragDropContext, Draggable } from \"react-beautiful-dnd\";\nimport { Drag, Drop, DropChild } from \"components/DragAndDrop\";\nimport { Profiler } from \"components/Profiler\";\n\nconst ProjectBoard = () => {\n  useDocumentTitle(\"看板列表\");\n  const { data: currentProject } = useProjectInUrl();\n  const { data: kanbans, isLoading: kanbanIsLoading } = useKanbans(\n    useKanbansSearchParams()\n  );\n  const { isLoading: taskIsLoading } = useTasks(useTasksSearchParams());\n  const isLoading = taskIsLoading || kanbanIsLoading;\n\n  const onDragEnd = useDragEnd();\n\n  return (\n    <Profiler id={\"看板页面\"}>\n      <DragDropContext onDragEnd={onDragEnd}>\n        <Container>\n          <h3>{currentProject?.name}</h3>\n          <SearchPannel />\n          {isLoading ? (\n            <Spin size={\"large\"} />\n          ) : (\n            <ColumnsContainer>\n              <Drop droppableId=\"kanban\" type=\"COLUMN\" direction=\"horizontal\">\n                <DropChild style={{ display: \"flex\" }}>\n                  {kanbans?.map((kanban, index) => (\n                    <Drag\n                      draggableId={\"kanban\" + kanban.id}\n                      index={index}\n                      key={kanban.id}\n                    >\n                      <KanbanColumn kanban={kanban} key={kanban.id} />\n                    </Drag>\n                  ))}\n                </DropChild>\n              </Drop>\n              <CreateKanban />\n            </ColumnsContainer>\n          )}\n          <EditTask />\n        </Container>\n      </DragDropContext>\n    </Profiler>\n  );\n};\n\nexport default ProjectBoard;\n\nconst ColumnsContainer = styled(\"div\")`\n  display: flex;\n  overflow-x: scroll;\n  flex: 1;\n`;\n","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/taskGroup/components/CreateEpic.tsx",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/projectBoard/utils/index.ts",["255","256"],"/*\n * @Descripttion: 看板、任务相关的工具函数hooks\n * @Author: huangjitao\n * @Date: 2021-07-17 11:07:13\n * @Function: 该文件用途描述\n */\n\nimport { useKanbans, useReorderKanban } from \"api/Kanban\";\nimport { useProject } from \"api/Projects\";\nimport { useReorderTask, useTask, useTasks } from \"api/Task\";\nimport { useCallback, useMemo } from \"react\";\nimport { DropResult } from \"react-beautiful-dnd\";\nimport { useLocation } from \"react-router\";\nimport { useDebounce } from \"utils\";\nimport useUrlQueryParam from \"utils/useUrlQueryParam\";\n\n/**\n * 获取url中的projectId\n * @returns\n */\nexport const useProjectIdInUrl = () => {\n  const { pathname } = useLocation();\n  const id = pathname.match(/projects\\/(\\d+)/)?.[1];\n  return Number(id);\n};\n\n/**\n * 根据url中的projectId获取项目数据\n */\nexport const useProjectInUrl = () => useProject(useProjectIdInUrl());\n\n/**\n * 根据url中的projectId获取看板请求参数\n */\nexport const useKanbansSearchParams = () => ({\n  projectId: useProjectIdInUrl(),\n});\n\nexport const useKanbansQueryKey = () => [\"kanbans\", useKanbansSearchParams()];\n\n/**\n * 根据url中的projectId获取任务请求参数\n */\nexport const useTasksSearchParams = () => {\n  const [params, setParams] = useUrlQueryParam([\n    \"name\",\n    \"typeId\",\n    \"processorId\",\n    \"tagId\",\n  ]);\n  const projectId = useProjectIdInUrl();\n\n  const name = useDebounce(params.name, 200);\n\n  return useMemo(\n    () => ({\n      projectId,\n      name: name || undefined,\n      typeId: Number(params.typeId) || undefined,\n      processorId: Number(params.processorId) || undefined,\n      tagId: Number(params.tagId) || undefined,\n    }),\n    [projectId, params]\n  );\n};\n\nexport const useTasksQueryKey = () => [\"tasks\", useTasksSearchParams()];\n\nexport const useTaskModal = () => {\n  const [{ editingTaskId }, setEditingTaskId] = useUrlQueryParam([\n    \"editingTaskId\",\n  ]);\n  const { data: editingTask, isLoading } = useTask(Number(editingTaskId));\n\n  const startEdit = useCallback(\n    (id: number) => {\n      setEditingTaskId({ editingTaskId: id });\n    },\n    [setEditingTaskId]\n  );\n\n  const close = useCallback(() => {\n    setEditingTaskId({ editingTaskId: \"\" });\n  }, [setEditingTaskId]);\n\n  return {\n    editingTask,\n    isLoading,\n    startEdit,\n    close,\n    editingTaskId,\n  };\n};\n\nexport const useDragEnd = () => {\n  const { data: kanbans } = useKanbans(useKanbansSearchParams());\n  const { mutate: reorderKanban } = useReorderKanban(useKanbansQueryKey());\n  const { mutate: reorderTask } = useReorderTask(useTasksQueryKey());\n  const { data: allTasks = [] } = useTasks(useTasksSearchParams());\n  return useCallback(\n    ({ source, destination, type }: DropResult) => {\n      if (!destination) {\n        return;\n      }\n      // 看板排序\n      if (type === \"COLUMN\") {\n        const fromId = kanbans?.[source.index].id;\n        const toId = kanbans?.[destination.index].id;\n        if (!fromId || !toId || fromId === toId) {\n          return;\n        }\n        const type = destination.index > source.index ? \"after\" : \"before\";\n        reorderKanban({ fromId, referenceId: toId, type });\n      }\n      if (type === \"ROW\") {\n        const fromKanbanId = +source.droppableId;\n        const toKanbanId = +destination.droppableId;\n        // if (fromKanbanId === toKanbanId) {\n        //   return;\n        // }\n        const fromTask = allTasks.filter(\n          (task) => task.kanbanId === fromKanbanId\n        )[source.index];\n        const toTask = allTasks.filter((task) => task.kanbanId === toKanbanId)[\n          destination.index\n        ];\n        if (fromTask?.id === toTask?.id) {\n          return;\n        }\n        reorderTask({\n          fromId: fromTask?.id,\n          referenceId: toTask?.id,\n          fromKanbanId,\n          toKanbanId,\n          type:\n            fromKanbanId === toKanbanId && destination.index > source.index\n              ? \"after\"\n              : \"before\",\n        });\n      }\n    },\n    [kanbans, reorderKanban, allTasks, reorderTask]\n  );\n};\n\nexport const reorder = ({\n  fromId,\n  type,\n  referenceId,\n  list,\n}: {\n  list: { id: number }[];\n  fromId: number;\n  type: \"after\" | \"before\";\n  referenceId: number;\n}) => {\n  const copiedList = [...list];\n  // 找到fromId对应项目的下标\n  const movingItemIndex = copiedList.findIndex((item) => item.id === fromId);\n  if (!referenceId) {\n    return insertAfter([...copiedList], movingItemIndex, copiedList.length - 1);\n  }\n  const targetIndex = copiedList.findIndex((item) => item.id === referenceId);\n  const insert = type === \"after\" ? insertAfter : insertBefore;\n  return insert([...copiedList], movingItemIndex, targetIndex);\n};\n\n/**\n * 在list中，把from放在to的前边\n * @param list\n * @param from\n * @param to\n */\nconst insertBefore = (list: unknown[], from: number, to: number) => {\n  const toItem = list[to];\n  const removedItem = list.splice(from, 1)[0];\n  const toIndex = list.indexOf(toItem);\n  list.splice(toIndex, 0, removedItem);\n  return list;\n};\n\n/**\n * 在list中，把from放在to的后面\n * @param list\n * @param from\n * @param to\n */\nconst insertAfter = (list: unknown[], from: number, to: number) => {\n  const toItem = list[to];\n  const removedItem = list.splice(from, 1)[0];\n  const toIndex = list.indexOf(toItem);\n  list.splice(toIndex + 1, 0, removedItem);\n  return list;\n};\n","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/taskGroup/utils/index.ts",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/api/Task.ts",["257"],"/*\n * @Descripttion: 任务相关接口请求\n * @Author: huangjitao\n * @Date: 2021-07-17 11:04:09\n * @Function: 该文件用途描述\n */\n\nimport { QueryKey, useMutation, useQuery } from \"react-query\";\nimport { Project } from \"types/Project\";\nimport { Task } from \"types/Task\";\nimport { TaskType } from \"types/TaskType\";\nimport { useHttp } from \"utils/http\";\nimport {\n  useAddOptimistic,\n  useDeleteOptimistic,\n  useEditOptimistic,\n  useReorderTaskOptimistic,\n} from \"utils/useOptimistic\";\nimport { SortProps } from \"./Kanban\";\n\nexport const useTasks = (param?: Partial<Task>) => {\n  const httpFetch = useHttp();\n\n  return useQuery<Task[]>([\"tasks\", param], () =>\n    httpFetch(\"tasks\", { data: param })\n  );\n};\n\nexport const useTask = (id?: number) => {\n  const httpFetch = useHttp();\n\n  return useQuery<Task>([\"tasks\", { id }], () => httpFetch(`tasks/${id}`), {\n    enabled: Boolean(id),\n  });\n};\n\nexport const useTaskTypes = (param?: Partial<TaskType>) => {\n  const httpFetch = useHttp();\n\n  return useQuery<TaskType[]>([\"taskTypes\"], () =>\n    httpFetch(\"taskTypes\", { data: param })\n  );\n};\n\nexport const useAddTask = (queryKey: QueryKey) => {\n  const httpFetch = useHttp();\n  return useMutation(\n    (params: Partial<Task>) =>\n      httpFetch(`tasks`, {\n        data: params,\n        method: \"POST\",\n      }),\n    useAddOptimistic(queryKey)\n  );\n};\n\nexport const useEditTask = (queryKey: QueryKey) => {\n  const httpFetch = useHttp();\n  return useMutation(\n    (params: Partial<Task>) =>\n      httpFetch(`tasks/${params.id}`, {\n        data: params,\n        method: \"PATCH\",\n      }),\n    useEditOptimistic(queryKey)\n  );\n};\n\nexport const useDeleteTask = (queryKey: QueryKey) => {\n  const httpFetch = useHttp();\n\n  return useMutation(\n    ({ id }: { id: number }) =>\n      httpFetch(`tasks/${id}`, {\n        method: \"DELETE\",\n      }),\n    useDeleteOptimistic(queryKey)\n  );\n};\n\nexport const useReorderTask = (queryKey: QueryKey) => {\n  const httpFetch = useHttp();\n  return useMutation(\n    (params: SortProps) =>\n      httpFetch(\"tasks/reorder\", {\n        data: params,\n        method: \"POST\",\n      }),\n    useReorderTaskOptimistic(queryKey)\n  );\n};\n","/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/api/Epic.ts",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/projectBoard/components/CreateKanban.tsx",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/projectBoard/components/EditTask.tsx",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/components/DragAndDrop.tsx",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/api/Kanban.ts",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/projectBoard/components/SearchPannel.tsx",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/projectBoard/components/KanbanColumn.tsx",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/components/TaskTypeSelect.tsx",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/projectBoard/components/Mark.tsx",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/projectBoard/components/TaskTypeIcon.tsx",[],"/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/projectBoard/components/CreateTask.tsx",[],{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","severity":1,"message":"263","line":8,"column":28,"nodeType":"264","messageId":"265","endLine":8,"endColumn":36},{"ruleId":"262","severity":1,"message":"266","line":7,"column":33,"nodeType":"264","messageId":"265","endLine":7,"endColumn":43},{"ruleId":"267","severity":1,"message":"268","line":29,"column":6,"nodeType":"269","endLine":29,"endColumn":8,"suggestions":"270"},{"ruleId":"262","severity":1,"message":"263","line":7,"column":17,"nodeType":"264","messageId":"265","endLine":7,"endColumn":25},{"ruleId":"262","severity":1,"message":"271","line":13,"column":18,"nodeType":"264","messageId":"265","endLine":13,"endColumn":23},{"ruleId":"262","severity":1,"message":"272","line":8,"column":10,"nodeType":"264","messageId":"265","endLine":8,"endColumn":32},{"ruleId":"262","severity":1,"message":"273","line":9,"column":43,"nodeType":"264","messageId":"265","endLine":9,"endColumn":57},{"ruleId":"262","severity":1,"message":"274","line":13,"column":8,"nodeType":"264","messageId":"265","endLine":13,"endColumn":24},{"ruleId":"262","severity":1,"message":"275","line":10,"column":10,"nodeType":"264","messageId":"265","endLine":10,"endColumn":25},{"ruleId":"262","severity":1,"message":"276","line":23,"column":24,"nodeType":"264","messageId":"265","endLine":23,"endColumn":39},{"ruleId":"267","severity":1,"message":"277","line":30,"column":8,"nodeType":"269","endLine":30,"endColumn":22,"suggestions":"278"},{"ruleId":"262","severity":1,"message":"279","line":24,"column":27,"nodeType":"264","messageId":"265","endLine":24,"endColumn":36},{"ruleId":"262","severity":1,"message":"280","line":45,"column":18,"nodeType":"264","messageId":"265","endLine":45,"endColumn":27},{"ruleId":"267","severity":1,"message":"281","line":63,"column":5,"nodeType":"269","endLine":63,"endColumn":24,"suggestions":"282"},{"ruleId":"262","severity":1,"message":"283","line":9,"column":10,"nodeType":"264","messageId":"265","endLine":9,"endColumn":17},"no-native-reassign",["284"],"no-negated-in-lhs",["285"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'callback'. Either include it or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["286"],"'Input' is defined but never used.","'useProjectParamsSearch' is defined but never used.","'useQueryClient' is defined but never used.","'useUrlQueryParam' is defined but never used.","'useSearchParams' is defined but never used.","'setSearchParams' is assigned a value but never used.","React Hook useMemo has a missing dependency: 'keys'. Either include it or remove the dependency array.",["287"],"'Draggable' is defined but never used.","'setParams' is assigned a value but never used.","React Hook useMemo has a missing dependency: 'name'. Either include it or remove the dependency array.",["288"],"'Project' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},"Update the dependencies array to be: [callback]",{"range":"295","text":"296"},"Update the dependencies array to be: [keys, searchParams]",{"range":"297","text":"298"},"Update the dependencies array to be: [projectId, name, params.typeId, params.processorId, params.tagId]",{"range":"299","text":"300"},[661,663],"[callback]",[947,961],"[keys, searchParams]",[1551,1570],"[projectId, name, params.typeId, params.processorId, params.tagId]"]