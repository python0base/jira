{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$();\n\n/*\n * @Descripttion: 任务相关接口请求\n * @Author: huangjitao\n * @Date: 2021-07-17 11:04:09\n * @Function: 该文件用途描述\n */\nimport { useMutation, useQuery } from \"react-query\";\nimport { useHttp } from \"utils/http\";\nimport { useAddOptimistic, useDeleteOptimistic, useEditOptimistic, useReorderTaskOptimistic } from \"utils/useOptimistic\";\nexport const useTasks = param => {\n  _s();\n\n  const httpFetch = useHttp();\n  return useQuery([\"tasks\", param], () => httpFetch(\"tasks\", {\n    data: param\n  }));\n};\n\n_s(useTasks, \"6F6Tcaq4EAsyXXn1KZ+lav+As8A=\", false, function () {\n  return [useHttp, useQuery];\n});\n\nexport const useTask = id => {\n  _s2();\n\n  const httpFetch = useHttp();\n  return useQuery([\"tasks\", {\n    id\n  }], () => httpFetch(`tasks/${id}`), {\n    enabled: Boolean(id)\n  });\n};\n\n_s2(useTask, \"6F6Tcaq4EAsyXXn1KZ+lav+As8A=\", false, function () {\n  return [useHttp, useQuery];\n});\n\nexport const useTaskTypes = param => {\n  _s3();\n\n  const httpFetch = useHttp();\n  return useQuery([\"taskTypes\"], () => httpFetch(\"taskTypes\", {\n    data: param\n  }));\n};\n\n_s3(useTaskTypes, \"6F6Tcaq4EAsyXXn1KZ+lav+As8A=\", false, function () {\n  return [useHttp, useQuery];\n});\n\nexport const useAddTask = queryKey => {\n  _s4();\n\n  const httpFetch = useHttp();\n  return useMutation(params => httpFetch(`tasks`, {\n    data: params,\n    method: \"POST\"\n  }), useAddOptimistic(queryKey));\n};\n\n_s4(useAddTask, \"eAMd67Ii2oCayBd1L+KMNKGAnrI=\", false, function () {\n  return [useHttp, useMutation, useAddOptimistic];\n});\n\nexport const useEditTask = queryKey => {\n  _s5();\n\n  const httpFetch = useHttp();\n  return useMutation(params => httpFetch(`tasks/${params.id}`, {\n    data: params,\n    method: \"PATCH\"\n  }), useEditOptimistic(queryKey));\n};\n\n_s5(useEditTask, \"K+DxlA/8jp2MeGxe5FYxYItB1kU=\", false, function () {\n  return [useHttp, useMutation, useEditOptimistic];\n});\n\nexport const useDeleteTask = queryKey => {\n  _s6();\n\n  const httpFetch = useHttp();\n  return useMutation(({\n    id\n  }) => httpFetch(`tasks/${id}`, {\n    method: \"DELETE\"\n  }), useDeleteOptimistic(queryKey));\n};\n\n_s6(useDeleteTask, \"3Y+bzaRGKtWfjfNRtbE/BdUkTlM=\", false, function () {\n  return [useHttp, useMutation, useDeleteOptimistic];\n});\n\nexport const useReorderTask = queryKey => {\n  _s7();\n\n  const httpFetch = useHttp();\n  return useMutation(params => httpFetch(\"tasks/reorder\", {\n    data: params,\n    method: \"POST\"\n  }), useReorderTaskOptimistic(queryKey));\n};\n\n_s7(useReorderTask, \"YAbiawe6zTmECUToL0ZvyfqfY9A=\", false, function () {\n  return [useHttp, useMutation, useReorderTaskOptimistic];\n});","map":{"version":3,"sources":["/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/api/Task.ts"],"names":["useMutation","useQuery","useHttp","useAddOptimistic","useDeleteOptimistic","useEditOptimistic","useReorderTaskOptimistic","useTasks","param","httpFetch","data","useTask","id","enabled","Boolean","useTaskTypes","useAddTask","queryKey","params","method","useEditTask","useDeleteTask","useReorderTask"],"mappings":"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","sourcesContent":["/*\n * @Descripttion: 任务相关接口请求\n * @Author: huangjitao\n * @Date: 2021-07-17 11:04:09\n * @Function: 该文件用途描述\n */\n\nimport { QueryKey, useMutation, useQuery } from \"react-query\";\nimport { Project } from \"types/Project\";\nimport { Task } from \"types/Task\";\nimport { TaskType } from \"types/TaskType\";\nimport { useHttp } from \"utils/http\";\nimport {\n  useAddOptimistic,\n  useDeleteOptimistic,\n  useEditOptimistic,\n  useReorderTaskOptimistic,\n} from \"utils/useOptimistic\";\nimport { SortProps } from \"./Kanban\";\n\nexport const useTasks = (param?: Partial<Task>) => {\n  const httpFetch = useHttp();\n\n  return useQuery<Task[]>([\"tasks\", param], () =>\n    httpFetch(\"tasks\", { data: param })\n  );\n};\n\nexport const useTask = (id?: number) => {\n  const httpFetch = useHttp();\n\n  return useQuery<Task>([\"tasks\", { id }], () => httpFetch(`tasks/${id}`), {\n    enabled: Boolean(id),\n  });\n};\n\nexport const useTaskTypes = (param?: Partial<TaskType>) => {\n  const httpFetch = useHttp();\n\n  return useQuery<TaskType[]>([\"taskTypes\"], () =>\n    httpFetch(\"taskTypes\", { data: param })\n  );\n};\n\nexport const useAddTask = (queryKey: QueryKey) => {\n  const httpFetch = useHttp();\n  return useMutation(\n    (params: Partial<Task>) =>\n      httpFetch(`tasks`, {\n        data: params,\n        method: \"POST\",\n      }),\n    useAddOptimistic(queryKey)\n  );\n};\n\nexport const useEditTask = (queryKey: QueryKey) => {\n  const httpFetch = useHttp();\n  return useMutation(\n    (params: Partial<Task>) =>\n      httpFetch(`tasks/${params.id}`, {\n        data: params,\n        method: \"PATCH\",\n      }),\n    useEditOptimistic(queryKey)\n  );\n};\n\nexport const useDeleteTask = (queryKey: QueryKey) => {\n  const httpFetch = useHttp();\n\n  return useMutation(\n    ({ id }: { id: number }) =>\n      httpFetch(`tasks/${id}`, {\n        method: \"DELETE\",\n      }),\n    useDeleteOptimistic(queryKey)\n  );\n};\n\nexport const useReorderTask = (queryKey: QueryKey) => {\n  const httpFetch = useHttp();\n  return useMutation(\n    (params: SortProps) =>\n      httpFetch(\"tasks/reorder\", {\n        data: params,\n        method: \"POST\",\n      }),\n    useReorderTaskOptimistic(queryKey)\n  );\n};\n"]},"metadata":{},"sourceType":"module"}