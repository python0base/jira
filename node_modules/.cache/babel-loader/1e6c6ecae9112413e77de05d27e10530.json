{"ast":null,"code":"var _jsxFileName = \"/Users/haoyan/reactpro/\\u9879\\u76EE/jira\\u9879\\u76EE/fake-jira-main/src/context/AuthContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n/*\n * @Descripttion: your project\n * @Author: huangjitao\n * @Date: 2021-04-22 22:16:18\n * @Function: use of this file\n */\nimport React from \"react\";\nimport * as auth from \"api/AuthProvider\";\nimport { useMount } from \"utils\";\nimport { http } from \"utils/http\";\nimport { useAsync } from \"utils/useAsync\";\nimport { FullError, Loading } from \"components\";\nimport { useQueryClient } from \"react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst bootStrapUser = async () => {\n  let user = null;\n  const token = auth.getToken();\n\n  if (token) {\n    const data = await http(\"me\", {\n      token\n    });\n    user = data.user;\n  }\n\n  return user;\n};\n\nconst AuthContext = /*#__PURE__*/React.createContext(undefined);\nAuthContext.displayName = \"AuthContext\";\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n\n  const {\n    run,\n    isLoading,\n    isError,\n    error,\n    isIdle,\n    data: user,\n    setData: setUser\n  } = useAsync();\n  const queryClient = useQueryClient();\n\n  const login = form => auth.login(form).then(setUser);\n\n  const register = form => auth.register(form).then(setUser);\n\n  const logout = () => auth.logout().then(() => {\n    setUser(null);\n    queryClient.clear();\n  });\n\n  useMount(() => {\n    // bootStrapUser().then(setUser);\n    run(bootStrapUser());\n  });\n\n  if (isIdle || isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(FullError, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    children: children,\n    value: {\n      user,\n      login,\n      register,\n      logout\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"Sw8xK2f/VhBm2hY7Q8b8wFrh7zg=\", false, function () {\n  return [useAsync, useQueryClient, useMount];\n});\n\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n\n  const context = React.useContext(AuthContext);\n\n  if (!context) {\n    throw new Error(\"useAuth必须在AuthProvider中使用\");\n  }\n\n  return context;\n};\n\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/context/AuthContext.tsx"],"names":["React","auth","useMount","http","useAsync","FullError","Loading","useQueryClient","bootStrapUser","user","token","getToken","data","AuthContext","createContext","undefined","displayName","AuthProvider","children","run","isLoading","isError","error","isIdle","setData","setUser","queryClient","login","form","then","register","logout","clear","useAuth","context","useContext","Error"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAA2C,OAA3C;AACA,OAAO,KAAKC,IAAZ,MAAsB,kBAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,QAAqB,YAArB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,YAAnC;AACA,SAASC,cAAT,QAA+B,aAA/B;;;AAEA,MAAMC,aAAa,GAAG,YAAY;AAChC,MAAIC,IAAI,GAAG,IAAX;AACA,QAAMC,KAAK,GAAGT,IAAI,CAACU,QAAL,EAAd;;AACA,MAAID,KAAJ,EAAW;AACT,UAAME,IAAI,GAAG,MAAMT,IAAI,CAAC,IAAD,EAAO;AAAEO,MAAAA;AAAF,KAAP,CAAvB;AACAD,IAAAA,IAAI,GAAGG,IAAI,CAACH,IAAZ;AACD;;AACD,SAAOA,IAAP;AACD,CARD;;AAUA,MAAMI,WAAW,gBAAGb,KAAK,CAACc,aAAN,CAQlBC,SARkB,CAApB;AAUAF,WAAW,CAACG,WAAZ,GAA0B,aAA1B;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA2C;AAAA;;AACrE,QAAM;AACJC,IAAAA,GADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA,KAJI;AAKJC,IAAAA,MALI;AAMJX,IAAAA,IAAI,EAAEH,IANF;AAOJe,IAAAA,OAAO,EAAEC;AAPL,MAQFrB,QAAQ,EARZ;AASA,QAAMsB,WAAW,GAAGnB,cAAc,EAAlC;;AACA,QAAMoB,KAAK,GAAIC,IAAD,IAA2B3B,IAAI,CAAC0B,KAAL,CAAWC,IAAX,EAAiBC,IAAjB,CAAsBJ,OAAtB,CAAzC;;AACA,QAAMK,QAAQ,GAAIF,IAAD,IAA2B3B,IAAI,CAAC6B,QAAL,CAAcF,IAAd,EAAoBC,IAApB,CAAyBJ,OAAzB,CAA5C;;AACA,QAAMM,MAAM,GAAG,MACb9B,IAAI,CAAC8B,MAAL,GAAcF,IAAd,CAAmB,MAAM;AACvBJ,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAC,IAAAA,WAAW,CAACM,KAAZ;AACD,GAHD,CADF;;AAMA9B,EAAAA,QAAQ,CAAC,MAAM;AACb;AACAiB,IAAAA,GAAG,CAACX,aAAa,EAAd,CAAH;AACD,GAHO,CAAR;;AAKA,MAAIe,MAAM,IAAIH,SAAd,EAAyB;AACvB,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAIC,OAAJ,EAAa;AACX,wBAAO,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEC;AAAlB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,QAAQ,EAAEJ,QADZ;AAEE,IAAA,KAAK,EAAE;AAAET,MAAAA,IAAF;AAAQkB,MAAAA,KAAR;AAAeG,MAAAA,QAAf;AAAyBC,MAAAA;AAAzB;AAFT;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAtCM;;GAAMd,Y;UASPb,Q,EACgBG,c,EASpBL,Q;;;KAnBWe,Y;AAwCb,OAAO,MAAMgB,OAAO,GAAG,MAAM;AAAA;;AAC3B,QAAMC,OAAO,GAAGlC,KAAK,CAACmC,UAAN,CAAiBtB,WAAjB,CAAhB;;AACA,MAAI,CAACqB,OAAL,EAAc;AACZ,UAAM,IAAIE,KAAJ,CAAU,2BAAV,CAAN;AACD;;AACD,SAAOF,OAAP;AACD,CANM;;IAAMD,O","sourcesContent":["/*\n * @Descripttion: your project\n * @Author: huangjitao\n * @Date: 2021-04-22 22:16:18\n * @Function: use of this file\n */\nimport { User } from \"types/User\";\nimport React, { ReactNode, useState } from \"react\";\nimport * as auth from \"api/AuthProvider\";\nimport { useMount } from \"utils\";\nimport { http } from \"utils/http\";\nimport { useAsync } from \"utils/useAsync\";\nimport { FullError, Loading } from \"components\";\nimport { useQueryClient } from \"react-query\";\n\nconst bootStrapUser = async () => {\n  let user = null;\n  const token = auth.getToken();\n  if (token) {\n    const data = await http(\"me\", { token });\n    user = data.user;\n  }\n  return user;\n};\n\nconst AuthContext = React.createContext<\n  | {\n      user: User | null;\n      login: (form: auth.IAuthParam) => Promise<void>;\n      register: (form: auth.IAuthParam) => Promise<void>;\n      logout: () => Promise<void>;\n    }\n  | undefined\n>(undefined);\n\nAuthContext.displayName = \"AuthContext\";\n\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\n  const {\n    run,\n    isLoading,\n    isError,\n    error,\n    isIdle,\n    data: user,\n    setData: setUser,\n  } = useAsync<User | null>();\n  const queryClient = useQueryClient();\n  const login = (form: auth.IAuthParam) => auth.login(form).then(setUser);\n  const register = (form: auth.IAuthParam) => auth.register(form).then(setUser);\n  const logout = () =>\n    auth.logout().then(() => {\n      setUser(null);\n      queryClient.clear();\n    });\n\n  useMount(() => {\n    // bootStrapUser().then(setUser);\n    run(bootStrapUser());\n  });\n\n  if (isIdle || isLoading) {\n    return <Loading />;\n  }\n\n  if (isError) {\n    return <FullError error={error} />;\n  }\n\n  return (\n    <AuthContext.Provider\n      children={children}\n      value={{ user, login, register, logout }}\n    />\n  );\n};\n\nexport const useAuth = () => {\n  const context = React.useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth必须在AuthProvider中使用\");\n  }\n  return context;\n};\n"]},"metadata":{},"sourceType":"module"}