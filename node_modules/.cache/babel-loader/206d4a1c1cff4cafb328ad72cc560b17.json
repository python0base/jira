{"ast":null,"code":"var _jsxFileName = \"/Users/haoyan/reactpro/\\u9879\\u76EE/jira\\u9879\\u76EE/fake-jira-main/src/components/Profiler.tsx\";\n\n/*\n * @Descripttion: Profiler性能追踪组件\n * @Author: huangjitao\n * @Date: 2021-08-02 08:14:18\n * @Function: 对React Profiler的二次封装\n */\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet queue = [];\n\nconst sendProfileQueue = () => {\n  if (!queue.length) {\n    return;\n  }\n\n  const queueToSend = [...queue];\n  queue = [];\n  console.log(queueToSend);\n};\n\nsetInterval(sendProfileQueue, 5000);\nexport const Profiler = ({\n  metadata,\n  phases,\n  ...props\n}) => {\n  const reportProfile = (id, phase, actualDuration, baseDuration, startTime, commitTime, interactions) => {\n    if (!phases || phases.includes(phase)) {\n      queue.push({\n        id,\n        phase,\n        actualDuration,\n        baseDuration,\n        startTime,\n        commitTime,\n        interactions,\n        metadata\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Profiler, {\n    onRender: reportProfile,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 10\n  }, this);\n};\n_c = Profiler;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profiler\");","map":{"version":3,"sources":["/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/components/Profiler.tsx"],"names":["React","queue","sendProfileQueue","length","queueToSend","console","log","setInterval","Profiler","metadata","phases","props","reportProfile","id","phase","actualDuration","baseDuration","startTime","commitTime","interactions","includes","push"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAA+D,OAA/D;;AAOA,IAAIC,KAAgB,GAAG,EAAvB;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC7B,MAAI,CAACD,KAAK,CAACE,MAAX,EAAmB;AACjB;AACD;;AACD,QAAMC,WAAW,GAAG,CAAC,GAAGH,KAAJ,CAApB;AACAA,EAAAA,KAAK,GAAG,EAAR;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACD,CAPD;;AASAG,WAAW,CAACL,gBAAD,EAAmB,IAAnB,CAAX;AAEA,OAAO,MAAMM,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,MAAZ;AAAoB,KAAGC;AAAvB,CAAD,KAA2C;AACjE,QAAMC,aAAuC,GAAG,CAC9CC,EAD8C,EAE9CC,KAF8C,EAG9CC,cAH8C,EAI9CC,YAJ8C,EAK9CC,SAL8C,EAM9CC,UAN8C,EAO9CC,YAP8C,KAQ3C;AACH,QAAI,CAACT,MAAD,IAAWA,MAAM,CAACU,QAAP,CAAgBN,KAAhB,CAAf,EAAuC;AACrCb,MAAAA,KAAK,CAACoB,IAAN,CAAW;AACTR,QAAAA,EADS;AAETC,QAAAA,KAFS;AAGTC,QAAAA,cAHS;AAITC,QAAAA,YAJS;AAKTC,QAAAA,SALS;AAMTC,QAAAA,UANS;AAOTC,QAAAA,YAPS;AAQTV,QAAAA;AARS,OAAX;AAUD;AACF,GArBD;;AAuBA,sBAAO,QAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,QAAQ,EAAEG,aAA1B;AAAA,OAA6CD;AAA7C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAzBM;KAAMH,Q","sourcesContent":["/*\n * @Descripttion: Profiler性能追踪组件\n * @Author: huangjitao\n * @Date: 2021-08-02 08:14:18\n * @Function: 对React Profiler的二次封装\n */\n\nimport React, { ProfilerOnRenderCallback, ProfilerProps } from \"react\";\n\ntype Props = { metadata?: any; phases?: (\"mount\" | \"update\")[] } & Omit<\n  ProfilerProps,\n  \"onRender\"\n>;\n\nlet queue: unknown[] = [];\n\nconst sendProfileQueue = () => {\n  if (!queue.length) {\n    return;\n  }\n  const queueToSend = [...queue];\n  queue = [];\n  console.log(queueToSend);\n};\n\nsetInterval(sendProfileQueue, 5000);\n\nexport const Profiler = ({ metadata, phases, ...props }: Props) => {\n  const reportProfile: ProfilerOnRenderCallback = (\n    id,\n    phase,\n    actualDuration,\n    baseDuration,\n    startTime,\n    commitTime,\n    interactions\n  ) => {\n    if (!phases || phases.includes(phase)) {\n      queue.push({\n        id,\n        phase,\n        actualDuration,\n        baseDuration,\n        startTime,\n        commitTime,\n        interactions,\n        metadata,\n      });\n    }\n  };\n\n  return <React.Profiler onRender={reportProfile} {...props} />;\n};\n"]},"metadata":{},"sourceType":"module"}