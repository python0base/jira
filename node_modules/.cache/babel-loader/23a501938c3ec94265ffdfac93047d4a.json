{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$(),\n    _s8 = $RefreshSig$();\n\n/*\n * @Descripttion: 看板、任务相关的工具函数hooks\n * @Author: huangjitao\n * @Date: 2021-07-17 11:07:13\n * @Function: 该文件用途描述\n */\nimport { useKanbans, useReorderKanban } from \"api/Kanban\";\nimport { useProject } from \"api/Projects\";\nimport { useReorderTask, useTask, useTasks } from \"api/Task\";\nimport { useCallback, useMemo } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { useDebounce } from \"utils\";\nimport useUrlQueryParam from \"utils/useUrlQueryParam\";\n/**\n * 获取url中的projectId\n * @returns\n */\n\nexport const useProjectIdInUrl = () => {\n  _s();\n\n  var _pathname$match;\n\n  const {\n    pathname\n  } = useLocation();\n  const id = (_pathname$match = pathname.match(/projects\\/(\\d+)/)) === null || _pathname$match === void 0 ? void 0 : _pathname$match[1];\n  return Number(id);\n};\n/**\n * 根据url中的projectId获取项目数据\n */\n\n_s(useProjectIdInUrl, \"qVMqkCpYCjknUqSjfMln5RFSkbo=\", false, function () {\n  return [useLocation];\n});\n\nexport const useProjectInUrl = () => {\n  _s2();\n\n  return useProject(useProjectIdInUrl());\n};\n/**\n * 根据url中的projectId获取看板请求参数\n */\n\n_s2(useProjectInUrl, \"hseIr6A3U425tcYLR8bnPV97aQk=\", false, function () {\n  return [useProject, useProjectIdInUrl];\n});\n\nexport const useKanbansSearchParams = () => {\n  _s3();\n\n  return {\n    projectId: useProjectIdInUrl()\n  };\n};\n\n_s3(useKanbansSearchParams, \"VnK1nLLYIo6uMGb0IIkaOseGAgM=\", false, function () {\n  return [useProjectIdInUrl];\n});\n\nexport const useKanbansQueryKey = () => {\n  _s4();\n\n  return [\"kanbans\", useKanbansSearchParams()];\n};\n/**\n * 根据url中的projectId获取任务请求参数\n */\n\n_s4(useKanbansQueryKey, \"tjB2rykOS21lV04ROQ3Cdv5+JiQ=\", false, function () {\n  return [useKanbansSearchParams];\n});\n\nexport const useTasksSearchParams = () => {\n  _s5();\n\n  const [params, setParams] = useUrlQueryParam([\"name\", \"typeId\", \"processorId\", \"tagId\"]);\n  const projectId = useProjectIdInUrl();\n  const name = useDebounce(params.name, 200);\n  return useMemo(() => ({\n    projectId,\n    name: name || undefined,\n    typeId: Number(params.typeId) || undefined,\n    processorId: Number(params.processorId) || undefined,\n    tagId: Number(params.tagId) || undefined\n  }), [projectId, params]);\n};\n\n_s5(useTasksSearchParams, \"iXHWrDiVqYptRw7QXj+qo0Fzkcs=\", false, function () {\n  return [useUrlQueryParam, useProjectIdInUrl, useDebounce];\n});\n\nexport const useTasksQueryKey = () => {\n  _s6();\n\n  return [\"tasks\", useTasksSearchParams()];\n};\n\n_s6(useTasksQueryKey, \"Q3cO1Ppt5Qjli7PjDBQxn8G4/VU=\", false, function () {\n  return [useTasksSearchParams];\n});\n\nexport const useTaskModal = () => {\n  _s7();\n\n  const [{\n    editingTaskId\n  }, setEditingTaskId] = useUrlQueryParam([\"editingTaskId\"]);\n  const {\n    data: editingTask,\n    isLoading\n  } = useTask(Number(editingTaskId));\n  const startEdit = useCallback(id => {\n    setEditingTaskId({\n      editingTaskId: id\n    });\n  }, [setEditingTaskId]);\n  const close = useCallback(() => {\n    setEditingTaskId({\n      editingTaskId: \"\"\n    });\n  }, [setEditingTaskId]);\n  return {\n    editingTask,\n    isLoading,\n    startEdit,\n    close,\n    editingTaskId\n  };\n};\n\n_s7(useTaskModal, \"BXApFX6n2UwX783RHIwUmj/tLnA=\", false, function () {\n  return [useUrlQueryParam, useTask];\n});\n\nexport const useDragEnd = () => {\n  _s8();\n\n  const {\n    data: kanbans\n  } = useKanbans(useKanbansSearchParams());\n  const {\n    mutate: reorderKanban\n  } = useReorderKanban(useKanbansQueryKey());\n  const {\n    mutate: reorderTask\n  } = useReorderTask(useTasksQueryKey());\n  const {\n    data: allTasks = []\n  } = useTasks(useTasksSearchParams());\n  return useCallback(({\n    source,\n    destination,\n    type\n  }) => {\n    if (!destination) {\n      return;\n    } // 看板排序\n\n\n    if (type === \"COLUMN\") {\n      const fromId = kanbans === null || kanbans === void 0 ? void 0 : kanbans[source.index].id;\n      const toId = kanbans === null || kanbans === void 0 ? void 0 : kanbans[destination.index].id;\n\n      if (!fromId || !toId || fromId === toId) {\n        return;\n      }\n\n      const type = destination.index > source.index ? \"after\" : \"before\";\n      reorderKanban({\n        fromId,\n        referenceId: toId,\n        type\n      });\n    }\n\n    if (type === \"ROW\") {\n      const fromKanbanId = +source.droppableId;\n      const toKanbanId = +destination.droppableId; // if (fromKanbanId === toKanbanId) {\n      //   return;\n      // }\n\n      const fromTask = allTasks.filter(task => task.kanbanId === fromKanbanId)[source.index];\n      const toTask = allTasks.filter(task => task.kanbanId === toKanbanId)[destination.index];\n\n      if ((fromTask === null || fromTask === void 0 ? void 0 : fromTask.id) === (toTask === null || toTask === void 0 ? void 0 : toTask.id)) {\n        return;\n      }\n\n      reorderTask({\n        fromId: fromTask === null || fromTask === void 0 ? void 0 : fromTask.id,\n        referenceId: toTask === null || toTask === void 0 ? void 0 : toTask.id,\n        fromKanbanId,\n        toKanbanId,\n        type: fromKanbanId === toKanbanId && destination.index > source.index ? \"after\" : \"before\"\n      });\n    }\n  }, [kanbans, reorderKanban, allTasks, reorderTask]);\n};\n\n_s8(useDragEnd, \"H2utoy92Jlpfd55ctiu4XMT0gMs=\", false, function () {\n  return [useKanbans, useKanbansSearchParams, useReorderKanban, useKanbansQueryKey, useReorderTask, useTasksQueryKey, useTasks, useTasksSearchParams];\n});\n\nexport const reorder = ({\n  fromId,\n  type,\n  referenceId,\n  list\n}) => {\n  const copiedList = [...list]; // 找到fromId对应项目的下标\n\n  const movingItemIndex = copiedList.findIndex(item => item.id === fromId);\n\n  if (!referenceId) {\n    return insertAfter([...copiedList], movingItemIndex, copiedList.length - 1);\n  }\n\n  const targetIndex = copiedList.findIndex(item => item.id === referenceId);\n  const insert = type === \"after\" ? insertAfter : insertBefore;\n  return insert([...copiedList], movingItemIndex, targetIndex);\n};\n/**\n * 在list中，把from放在to的前边\n * @param list\n * @param from\n * @param to\n */\n\nconst insertBefore = (list, from, to) => {\n  const toItem = list[to];\n  const removedItem = list.splice(from, 1)[0];\n  const toIndex = list.indexOf(toItem);\n  list.splice(toIndex, 0, removedItem);\n  return list;\n};\n/**\n * 在list中，把from放在to的后面\n * @param list\n * @param from\n * @param to\n */\n\n\nconst insertAfter = (list, from, to) => {\n  const toItem = list[to];\n  const removedItem = list.splice(from, 1)[0];\n  const toIndex = list.indexOf(toItem);\n  list.splice(toIndex + 1, 0, removedItem);\n  return list;\n};","map":{"version":3,"sources":["/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/projectBoard/utils/index.ts"],"names":["useKanbans","useReorderKanban","useProject","useReorderTask","useTask","useTasks","useCallback","useMemo","useLocation","useDebounce","useUrlQueryParam","useProjectIdInUrl","pathname","id","match","Number","useProjectInUrl","useKanbansSearchParams","projectId","useKanbansQueryKey","useTasksSearchParams","params","setParams","name","undefined","typeId","processorId","tagId","useTasksQueryKey","useTaskModal","editingTaskId","setEditingTaskId","data","editingTask","isLoading","startEdit","close","useDragEnd","kanbans","mutate","reorderKanban","reorderTask","allTasks","source","destination","type","fromId","index","toId","referenceId","fromKanbanId","droppableId","toKanbanId","fromTask","filter","task","kanbanId","toTask","reorder","list","copiedList","movingItemIndex","findIndex","item","insertAfter","length","targetIndex","insert","insertBefore","from","to","toItem","removedItem","splice","toIndex","indexOf"],"mappings":"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","sourcesContent":["/*\n * @Descripttion: 看板、任务相关的工具函数hooks\n * @Author: huangjitao\n * @Date: 2021-07-17 11:07:13\n * @Function: 该文件用途描述\n */\n\nimport { useKanbans, useReorderKanban } from \"api/Kanban\";\nimport { useProject } from \"api/Projects\";\nimport { useReorderTask, useTask, useTasks } from \"api/Task\";\nimport { useCallback, useMemo } from \"react\";\nimport { DropResult } from \"react-beautiful-dnd\";\nimport { useLocation } from \"react-router\";\nimport { useDebounce } from \"utils\";\nimport useUrlQueryParam from \"utils/useUrlQueryParam\";\n\n/**\n * 获取url中的projectId\n * @returns\n */\nexport const useProjectIdInUrl = () => {\n  const { pathname } = useLocation();\n  const id = pathname.match(/projects\\/(\\d+)/)?.[1];\n  return Number(id);\n};\n\n/**\n * 根据url中的projectId获取项目数据\n */\nexport const useProjectInUrl = () => useProject(useProjectIdInUrl());\n\n/**\n * 根据url中的projectId获取看板请求参数\n */\nexport const useKanbansSearchParams = () => ({\n  projectId: useProjectIdInUrl(),\n});\n\nexport const useKanbansQueryKey = () => [\"kanbans\", useKanbansSearchParams()];\n\n/**\n * 根据url中的projectId获取任务请求参数\n */\nexport const useTasksSearchParams = () => {\n  const [params, setParams] = useUrlQueryParam([\n    \"name\",\n    \"typeId\",\n    \"processorId\",\n    \"tagId\",\n  ]);\n  const projectId = useProjectIdInUrl();\n\n  const name = useDebounce(params.name, 200);\n\n  return useMemo(\n    () => ({\n      projectId,\n      name: name || undefined,\n      typeId: Number(params.typeId) || undefined,\n      processorId: Number(params.processorId) || undefined,\n      tagId: Number(params.tagId) || undefined,\n    }),\n    [projectId, params]\n  );\n};\n\nexport const useTasksQueryKey = () => [\"tasks\", useTasksSearchParams()];\n\nexport const useTaskModal = () => {\n  const [{ editingTaskId }, setEditingTaskId] = useUrlQueryParam([\n    \"editingTaskId\",\n  ]);\n  const { data: editingTask, isLoading } = useTask(Number(editingTaskId));\n\n  const startEdit = useCallback(\n    (id: number) => {\n      setEditingTaskId({ editingTaskId: id });\n    },\n    [setEditingTaskId]\n  );\n\n  const close = useCallback(() => {\n    setEditingTaskId({ editingTaskId: \"\" });\n  }, [setEditingTaskId]);\n\n  return {\n    editingTask,\n    isLoading,\n    startEdit,\n    close,\n    editingTaskId,\n  };\n};\n\nexport const useDragEnd = () => {\n  const { data: kanbans } = useKanbans(useKanbansSearchParams());\n  const { mutate: reorderKanban } = useReorderKanban(useKanbansQueryKey());\n  const { mutate: reorderTask } = useReorderTask(useTasksQueryKey());\n  const { data: allTasks = [] } = useTasks(useTasksSearchParams());\n  return useCallback(\n    ({ source, destination, type }: DropResult) => {\n      if (!destination) {\n        return;\n      }\n      // 看板排序\n      if (type === \"COLUMN\") {\n        const fromId = kanbans?.[source.index].id;\n        const toId = kanbans?.[destination.index].id;\n        if (!fromId || !toId || fromId === toId) {\n          return;\n        }\n        const type = destination.index > source.index ? \"after\" : \"before\";\n        reorderKanban({ fromId, referenceId: toId, type });\n      }\n      if (type === \"ROW\") {\n        const fromKanbanId = +source.droppableId;\n        const toKanbanId = +destination.droppableId;\n        // if (fromKanbanId === toKanbanId) {\n        //   return;\n        // }\n        const fromTask = allTasks.filter(\n          (task) => task.kanbanId === fromKanbanId\n        )[source.index];\n        const toTask = allTasks.filter((task) => task.kanbanId === toKanbanId)[\n          destination.index\n        ];\n        if (fromTask?.id === toTask?.id) {\n          return;\n        }\n        reorderTask({\n          fromId: fromTask?.id,\n          referenceId: toTask?.id,\n          fromKanbanId,\n          toKanbanId,\n          type:\n            fromKanbanId === toKanbanId && destination.index > source.index\n              ? \"after\"\n              : \"before\",\n        });\n      }\n    },\n    [kanbans, reorderKanban, allTasks, reorderTask]\n  );\n};\n\nexport const reorder = ({\n  fromId,\n  type,\n  referenceId,\n  list,\n}: {\n  list: { id: number }[];\n  fromId: number;\n  type: \"after\" | \"before\";\n  referenceId: number;\n}) => {\n  const copiedList = [...list];\n  // 找到fromId对应项目的下标\n  const movingItemIndex = copiedList.findIndex((item) => item.id === fromId);\n  if (!referenceId) {\n    return insertAfter([...copiedList], movingItemIndex, copiedList.length - 1);\n  }\n  const targetIndex = copiedList.findIndex((item) => item.id === referenceId);\n  const insert = type === \"after\" ? insertAfter : insertBefore;\n  return insert([...copiedList], movingItemIndex, targetIndex);\n};\n\n/**\n * 在list中，把from放在to的前边\n * @param list\n * @param from\n * @param to\n */\nconst insertBefore = (list: unknown[], from: number, to: number) => {\n  const toItem = list[to];\n  const removedItem = list.splice(from, 1)[0];\n  const toIndex = list.indexOf(toItem);\n  list.splice(toIndex, 0, removedItem);\n  return list;\n};\n\n/**\n * 在list中，把from放在to的后面\n * @param list\n * @param from\n * @param to\n */\nconst insertAfter = (list: unknown[], from: number, to: number) => {\n  const toItem = list[to];\n  const removedItem = list.splice(from, 1)[0];\n  const toIndex = list.indexOf(toItem);\n  list.splice(toIndex + 1, 0, removedItem);\n  return list;\n};\n"]},"metadata":{},"sourceType":"module"}