{"ast":null,"code":"var _jsxFileName = \"/Users/haoyan/reactpro/\\u9879\\u76EE/jira\\u9879\\u76EE/fake-jira-main/src/pages/authPage/components/ProjectPopover.tsx\",\n    _s = $RefreshSig$();\n\n/*\n * @Descripttion: 收藏项目列表\n * @Author: huangjitao\n * @Date: 2021-05-29 21:01:19\n * @Function: 头部项目按钮悬浮下的项目收藏列表\n */\nimport React from \"react\";\nimport { Button, Divider, List, Popover, Typography } from \"antd\";\nimport { useProjects } from \"api/Projects\";\nimport styled from \"@emotion/styled\";\nimport { useProjectModal } from \"pages/projectList/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProjectPopover = () => {\n  _s();\n\n  const {\n    data: projects,\n    refetch\n  } = useProjects();\n  const {\n    openModal\n  } = useProjectModal();\n  const pinnedProjects = projects === null || projects === void 0 ? void 0 : projects.filter(project => project.pin);\n\n  const content = /*#__PURE__*/_jsxDEV(ContentContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Typography.Text, {\n      type: \"secondary\",\n      children: \"\\u6536\\u85CF\\u9879\\u76EE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: pinnedProjects === null || pinnedProjects === void 0 ? void 0 : pinnedProjects.map(project => /*#__PURE__*/_jsxDEV(List.Item, {\n        children: /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n          title: project.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)\n      }, project.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        padding: 0\n      },\n      onClick: openModal,\n      type: \"link\",\n      children: \"\\u521B\\u5EFA\\u9879\\u76EE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Popover, {\n    onVisibleChange: () => refetch(),\n    placement: \"bottom\",\n    content: content,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\u9879\\u76EE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProjectPopover, \"c5BwmiW/DZtedLpLKS+rMpMr/0M=\", false, function () {\n  return [useProjects, useProjectModal];\n});\n\n_c = ProjectPopover;\nconst ContentContainer = styled.div`\n  min-width: 30rem;\n`;\n_c2 = ContentContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProjectPopover\");\n$RefreshReg$(_c2, \"ContentContainer\");","map":{"version":3,"sources":["/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/authPage/components/ProjectPopover.tsx"],"names":["React","Button","Divider","List","Popover","Typography","useProjects","styled","useProjectModal","ProjectPopover","data","projects","refetch","openModal","pinnedProjects","filter","project","pin","content","map","name","id","padding","ContentContainer","div"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,IAA1B,EAAgCC,OAAhC,EAAyCC,UAAzC,QAA2D,MAA3D;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,eAAT,QAAgC,yBAAhC;;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAClC,QAAM;AAAEC,IAAAA,IAAI,EAAEC,QAAR;AAAkBC,IAAAA;AAAlB,MAA8BN,WAAW,EAA/C;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAgBL,eAAe,EAArC;AACA,QAAMM,cAAc,GAAGH,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEI,MAAV,CAAkBC,OAAD,IAAaA,OAAO,CAACC,GAAtC,CAAvB;;AAEA,QAAMC,OAAO,gBACX,QAAC,gBAAD;AAAA,4BACE,QAAC,UAAD,CAAY,IAAZ;AAAiB,MAAA,IAAI,EAAE,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAA,gBACGJ,cADH,aACGA,cADH,uBACGA,cAAc,CAAEK,GAAhB,CAAqBH,OAAD,iBACnB,QAAC,IAAD,CAAM,IAAN;AAAA,+BACE,QAAC,IAAD,CAAM,IAAN,CAAW,IAAX;AAAgB,UAAA,KAAK,EAAEA,OAAO,CAACI;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF,SAAgBJ,OAAO,CAACK,EAAxB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF,eASE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YATF,eAUE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAf;AAA+B,MAAA,OAAO,EAAET,SAAxC;AAAmD,MAAA,IAAI,EAAE,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAiBA,sBACE,QAAC,OAAD;AACE,IAAA,eAAe,EAAE,MAAMD,OAAO,EADhC;AAEE,IAAA,SAAS,EAAE,QAFb;AAGE,IAAA,OAAO,EAAEM,OAHX;AAAA,2BAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA/BM;;GAAMT,c;UACyBH,W,EACdE,e;;;KAFXC,c;AAiCb,MAAMc,gBAAgB,GAAGhB,MAAM,CAACiB,GAAI;AACpC;AACA,CAFA;MAAMD,gB","sourcesContent":["/*\n * @Descripttion: 收藏项目列表\n * @Author: huangjitao\n * @Date: 2021-05-29 21:01:19\n * @Function: 头部项目按钮悬浮下的项目收藏列表\n */\n\nimport React from \"react\";\nimport { Button, Divider, List, Popover, Typography } from \"antd\";\nimport { useProjects } from \"api/Projects\";\nimport styled from \"@emotion/styled\";\nimport { useProjectModal } from \"pages/projectList/utils\";\n\nexport const ProjectPopover = () => {\n  const { data: projects, refetch } = useProjects();\n  const { openModal } = useProjectModal();\n  const pinnedProjects = projects?.filter((project) => project.pin);\n\n  const content = (\n    <ContentContainer>\n      <Typography.Text type={\"secondary\"}>收藏项目</Typography.Text>\n      <List>\n        {pinnedProjects?.map((project) => (\n          <List.Item key={project.id}>\n            <List.Item.Meta title={project.name} />\n          </List.Item>\n        ))}\n      </List>\n      <Divider />\n      <Button style={{ padding: 0 }} onClick={openModal} type={\"link\"}>\n        创建项目\n      </Button>\n    </ContentContainer>\n  );\n\n  return (\n    <Popover\n      onVisibleChange={() => refetch()}\n      placement={\"bottom\"}\n      content={content}\n    >\n      <span>项目</span>\n    </Popover>\n  );\n};\n\nconst ContentContainer = styled.div`\n  min-width: 30rem;\n`;\n"]},"metadata":{},"sourceType":"module"}