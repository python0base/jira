{"ast":null,"code":"var _jsxFileName = \"/Users/haoyan/reactpro/\\u9879\\u76EE/jira\\u9879\\u76EE/fake-jira-main/src/pages/projectBoard/components/CreateTask.tsx\",\n    _s = $RefreshSig$();\n\n/*\n * @Descripttion: your project\n * @Author: huangjitao\n * @Date: 2021-07-19 20:45:40\n * @Function: 该文件用途描述\n */\nimport { Card, Input } from \"antd\";\nimport { useAddTask } from \"api/Task\";\nimport { useEffect, useState } from \"react\";\nimport { useProjectIdInUrl, useTasksQueryKey } from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateTask = props => {\n  _s();\n\n  const {\n    kanbanId\n  } = props;\n  const [name, setName] = useState(\"\");\n  const [inputMode, setInputMode] = useState(false);\n  const projectId = useProjectIdInUrl();\n  const {\n    mutateAsync: addTask\n  } = useAddTask(useTasksQueryKey());\n\n  const submit = async () => {\n    await addTask({\n      name,\n      projectId,\n      kanbanId\n    });\n    setInputMode(false);\n    setName(\"\");\n  };\n\n  useEffect(() => {\n    if (!inputMode) {\n      setName(\"\");\n    }\n  }, [inputMode]);\n\n  const toggle = () => setInputMode(mode => !mode);\n\n  if (!inputMode) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: toggle,\n      children: \" + \\u521B\\u5EFA\\u4EFB\\u52A1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Input, {\n      onBlur: toggle,\n      name: name,\n      onChange: evt => setName(evt.target.value),\n      autoFocus: true,\n      onPressEnter: submit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateTask, \"uFgrCzalb++6ZdtzCOlU4WvHowk=\", false, function () {\n  return [useProjectIdInUrl, useAddTask, useTasksQueryKey];\n});\n\n_c = CreateTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTask\");","map":{"version":3,"sources":["/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/projectBoard/components/CreateTask.tsx"],"names":["Card","Input","useAddTask","useEffect","useState","useProjectIdInUrl","useTasksQueryKey","CreateTask","props","kanbanId","name","setName","inputMode","setInputMode","projectId","mutateAsync","addTask","submit","toggle","mode","evt","target","value"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,IAAT,EAAeC,KAAf,QAA4B,MAA5B;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,UAApD;;AAMA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAA4B;AAAA;;AACpD,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAS,EAAT,CAAhC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAU,KAAV,CAA1C;AACA,QAAMU,SAAS,GAAGT,iBAAiB,EAAnC;AACA,QAAM;AAAEU,IAAAA,WAAW,EAAEC;AAAf,MAA2Bd,UAAU,CAACI,gBAAgB,EAAjB,CAA3C;;AAEA,QAAMW,MAAM,GAAG,YAAY;AACzB,UAAMD,OAAO,CAAC;AAAEN,MAAAA,IAAF;AAAQI,MAAAA,SAAR;AAAmBL,MAAAA;AAAnB,KAAD,CAAb;AACAI,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAJD;;AAMAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACS,SAAL,EAAgB;AACdD,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,GAJQ,EAIN,CAACC,SAAD,CAJM,CAAT;;AAMA,QAAMM,MAAM,GAAG,MAAML,YAAY,CAAEM,IAAD,IAAU,CAACA,IAAZ,CAAjC;;AAEA,MAAI,CAACP,SAAL,EAAgB;AACd,wBAAO;AAAK,MAAA,OAAO,EAAEM,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,IAAD;AAAA,2BACE,QAAC,KAAD;AACE,MAAA,MAAM,EAAEA,MADV;AAEE,MAAA,IAAI,EAAER,IAFR;AAGE,MAAA,QAAQ,EAAGU,GAAD,IAAST,OAAO,CAACS,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAH5B;AAIE,MAAA,SAAS,EAAE,IAJb;AAKE,MAAA,YAAY,EAAEL;AALhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CApCM;;GAAMV,U;UAIOF,iB,EACeH,U,EAAWI,gB;;;KALjCC,U","sourcesContent":["/*\n * @Descripttion: your project\n * @Author: huangjitao\n * @Date: 2021-07-19 20:45:40\n * @Function: 该文件用途描述\n */\n\nimport { Card, Input } from \"antd\";\nimport { useAddTask } from \"api/Task\";\nimport { useEffect, useState } from \"react\";\nimport { useProjectIdInUrl, useTasksQueryKey } from \"../utils\";\n\ninterface CreateTaskProps {\n  kanbanId: number;\n}\n\nexport const CreateTask = (props: CreateTaskProps) => {\n  const { kanbanId } = props;\n  const [name, setName] = useState<string>(\"\");\n  const [inputMode, setInputMode] = useState<boolean>(false);\n  const projectId = useProjectIdInUrl();\n  const { mutateAsync: addTask } = useAddTask(useTasksQueryKey());\n\n  const submit = async () => {\n    await addTask({ name, projectId, kanbanId });\n    setInputMode(false);\n    setName(\"\");\n  };\n\n  useEffect(() => {\n    if (!inputMode) {\n      setName(\"\");\n    }\n  }, [inputMode]);\n\n  const toggle = () => setInputMode((mode) => !mode);\n\n  if (!inputMode) {\n    return <div onClick={toggle}> + 创建任务</div>;\n  }\n\n  return (\n    <Card>\n      <Input\n        onBlur={toggle}\n        name={name}\n        onChange={(evt) => setName(evt.target.value)}\n        autoFocus={true}\n        onPressEnter={submit}\n      />\n    </Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}