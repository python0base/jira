{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\n/*\n * @Descripttion: 与项目列表有关的工具函数\n * @Author: huangjitao\n * @Date: 2021-04-28 20:38:45\n * @Function: use of this file\n */\nimport { useProject } from \"api/Projects\";\nimport { useMemo } from \"react\";\nimport useUrlQueryParam, { useSetUrlSearchParam } from \"utils/useUrlQueryParam\";\n/**\n * 使用useUrlQueryParam，从url中获取的参数值永远是string类型\n */\n\nexport const useProjectParamsSearch = () => {\n  _s();\n\n  const [param, setParam] = useUrlQueryParam([\"name\", \"personId\"]);\n  return [useMemo(() => ({ ...param,\n    personId: Number(param.personId) || undefined\n  }), [param]), setParam];\n};\n\n_s(useProjectParamsSearch, \"TD0UJCbWDCDzLmNJps2XA2DVm8M=\", false, function () {\n  return [useUrlQueryParam];\n});\n\nexport const useProjectsQueryKey = () => {\n  _s2();\n\n  const [params] = useProjectParamsSearch();\n  return [\"projects\", params];\n};\n\n_s2(useProjectsQueryKey, \"bt3lxRDWNE4k7uDaKw/0zBX7nn4=\", false, function () {\n  return [useProjectParamsSearch];\n});\n\nexport const useProjectModal = () => {\n  _s3();\n\n  const [{\n    projectCreate\n  }, setProjectCreate] = useUrlQueryParam([\"projectCreate\"]);\n  const [{\n    editingProjectId\n  }, setEditingProjectId] = useUrlQueryParam([\"editingProjectId\"]);\n  const {\n    data: editingProject,\n    isLoading\n  } = useProject(Number(editingProjectId));\n  const setUrlSearchParam = useSetUrlSearchParam();\n\n  const close = () => setUrlSearchParam({\n    editingProjectId: \"\",\n    projectCreate: \"\"\n  });\n\n  const open = () => setProjectCreate({\n    projectCreate: true\n  });\n\n  const startEdit = id => setEditingProjectId({\n    editingProjectId: id\n  });\n\n  return {\n    projectModalOpen: projectCreate === \"true\" || Boolean(editingProjectId),\n    closeModal: close,\n    openModal: open,\n    editingProject,\n    startEdit,\n    isLoading\n  };\n};\n\n_s3(useProjectModal, \"+NLMJXGV2areCi5PLc2Uqqgev38=\", false, function () {\n  return [useUrlQueryParam, useUrlQueryParam, useProject, useSetUrlSearchParam];\n});","map":{"version":3,"sources":["/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/projectList/utils/index.ts"],"names":["useProject","useMemo","useUrlQueryParam","useSetUrlSearchParam","useProjectParamsSearch","param","setParam","personId","Number","undefined","useProjectsQueryKey","params","useProjectModal","projectCreate","setProjectCreate","editingProjectId","setEditingProjectId","data","editingProject","isLoading","setUrlSearchParam","close","open","startEdit","id","projectModalOpen","Boolean","closeModal","openModal"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,UAAT,QAA2B,cAA3B;AACA,SAASC,OAAT,QAAwB,OAAxB;AAEA,OAAOC,gBAAP,IAA2BC,oBAA3B,QAAuD,wBAAvD;AAEA;AACA;AACA;;AACA,OAAO,MAAMC,sBAAsB,GAAG,MAAM;AAAA;;AAC1C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,gBAAgB,CAAC,CAAC,MAAD,EAAS,UAAT,CAAD,CAA1C;AACA,SAAO,CACLD,OAAO,CACL,OAAO,EAAE,GAAGI,KAAL;AAAYE,IAAAA,QAAQ,EAAEC,MAAM,CAACH,KAAK,CAACE,QAAP,CAAN,IAA0BE;AAAhD,GAAP,CADK,EAEL,CAACJ,KAAD,CAFK,CADF,EAKLC,QALK,CAAP;AAOD,CATM;;GAAMF,sB;UACeF,gB;;;AAU5B,OAAO,MAAMQ,mBAAmB,GAAG,MAAM;AAAA;;AACvC,QAAM,CAACC,MAAD,IAAWP,sBAAsB,EAAvC;AACA,SAAO,CAAC,UAAD,EAAaO,MAAb,CAAP;AACD,CAHM;;IAAMD,mB;UACMN,sB;;;AAInB,OAAO,MAAMQ,eAAe,GAAG,MAAM;AAAA;;AACnC,QAAM,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAoBC,gBAApB,IAAwCZ,gBAAgB,CAAC,CAC7D,eAD6D,CAAD,CAA9D;AAGA,QAAM,CAAC;AAAEa,IAAAA;AAAF,GAAD,EAAuBC,mBAAvB,IAA8Cd,gBAAgB,CAAC,CACnE,kBADmE,CAAD,CAApE;AAIA,QAAM;AAAEe,IAAAA,IAAI,EAAEC,cAAR;AAAwBC,IAAAA;AAAxB,MAAsCnB,UAAU,CACpDQ,MAAM,CAACO,gBAAD,CAD8C,CAAtD;AAIA,QAAMK,iBAAiB,GAAGjB,oBAAoB,EAA9C;;AACA,QAAMkB,KAAK,GAAG,MACZD,iBAAiB,CAAC;AAAEL,IAAAA,gBAAgB,EAAE,EAApB;AAAwBF,IAAAA,aAAa,EAAE;AAAvC,GAAD,CADnB;;AAEA,QAAMS,IAAI,GAAG,MAAMR,gBAAgB,CAAC;AAAED,IAAAA,aAAa,EAAE;AAAjB,GAAD,CAAnC;;AACA,QAAMU,SAAS,GAAIC,EAAD,IAChBR,mBAAmB,CAAC;AAAED,IAAAA,gBAAgB,EAAES;AAApB,GAAD,CADrB;;AAGA,SAAO;AACLC,IAAAA,gBAAgB,EAAEZ,aAAa,KAAK,MAAlB,IAA4Ba,OAAO,CAACX,gBAAD,CADhD;AAELY,IAAAA,UAAU,EAAEN,KAFP;AAGLO,IAAAA,SAAS,EAAEN,IAHN;AAILJ,IAAAA,cAJK;AAKLK,IAAAA,SALK;AAMLJ,IAAAA;AANK,GAAP;AAQD,CA3BM;;IAAMP,e;UACmCV,gB,EAGMA,gB,EAIRF,U,EAIlBG,oB","sourcesContent":["/*\n * @Descripttion: 与项目列表有关的工具函数\n * @Author: huangjitao\n * @Date: 2021-04-28 20:38:45\n * @Function: use of this file\n */\n\nimport { useProject } from \"api/Projects\";\nimport { useMemo } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport useUrlQueryParam, { useSetUrlSearchParam } from \"utils/useUrlQueryParam\";\n\n/**\n * 使用useUrlQueryParam，从url中获取的参数值永远是string类型\n */\nexport const useProjectParamsSearch = () => {\n  const [param, setParam] = useUrlQueryParam([\"name\", \"personId\"]);\n  return [\n    useMemo(\n      () => ({ ...param, personId: Number(param.personId) || undefined }),\n      [param]\n    ),\n    setParam,\n  ] as const;\n};\n\nexport const useProjectsQueryKey = () => {\n  const [params] = useProjectParamsSearch();\n  return [\"projects\", params];\n};\n\nexport const useProjectModal = () => {\n  const [{ projectCreate }, setProjectCreate] = useUrlQueryParam([\n    \"projectCreate\",\n  ]);\n  const [{ editingProjectId }, setEditingProjectId] = useUrlQueryParam([\n    \"editingProjectId\",\n  ]);\n\n  const { data: editingProject, isLoading } = useProject(\n    Number(editingProjectId)\n  );\n\n  const setUrlSearchParam = useSetUrlSearchParam();\n  const close = () =>\n    setUrlSearchParam({ editingProjectId: \"\", projectCreate: \"\" });\n  const open = () => setProjectCreate({ projectCreate: true });\n  const startEdit = (id: number) =>\n    setEditingProjectId({ editingProjectId: id });\n\n  return {\n    projectModalOpen: projectCreate === \"true\" || Boolean(editingProjectId),\n    closeModal: close,\n    openModal: open,\n    editingProject,\n    startEdit,\n    isLoading,\n  } as const;\n};\n"]},"metadata":{},"sourceType":"module"}