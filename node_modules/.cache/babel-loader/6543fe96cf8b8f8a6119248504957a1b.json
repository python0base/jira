{"ast":null,"code":"var _s = $RefreshSig$();\n\n/*\n * @Descripttion: your project\n * @Author: huangjitao\n * @Date: 2021-04-22 22:16:18\n * @Function: use of this file\n */\nimport qs from \"qs\";\nimport * as auth from \"api/AuthProvider\";\nimport { useAuth } from \"context/AuthContext\";\nimport { baseUrl } from \"consts\";\nimport { useCallback } from \"react\";\nexport const http = async (url, {\n  data,\n  token,\n  headers,\n  ...customConfig\n} = {}) => {\n  const config = {\n    method: \"GET\",\n    headers: {\n      Authorization: token ? `Bearer ${token}` : \"\",\n      \"Content-Type\": data ? \"application/json\" : \"\"\n    },\n    ...customConfig\n  };\n\n  if (config.method.toUpperCase() === \"GET\") {\n    url = `${url}?${qs.stringify(data)}`;\n  } else {\n    config.body = JSON.stringify(data || {});\n  }\n\n  return window.fetch(`${baseUrl}/${url}`, config).then(async res => {\n    if (res.status === 401) {\n      await auth.logout();\n      window.location.reload();\n      return Promise.reject({\n        message: \"请重新登录\"\n      });\n    }\n\n    const dataRes = await res.json();\n\n    if (res.ok) {\n      return dataRes;\n    } else {\n      return Promise.reject(dataRes);\n    }\n  });\n};\nexport const useHttp = () => {\n  _s();\n\n  const {\n    user\n  } = useAuth();\n  return useCallback((...[url, config]) => http(url, { ...config,\n    token: user === null || user === void 0 ? void 0 : user.token\n  }), [user === null || user === void 0 ? void 0 : user.token]);\n};\n\n_s(useHttp, \"Vlg0N8fS6hIo4W98lEIuFTsNl64=\", false, function () {\n  return [useAuth];\n});","map":{"version":3,"sources":["/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/utils/http.ts"],"names":["qs","auth","useAuth","baseUrl","useCallback","http","url","data","token","headers","customConfig","config","method","Authorization","toUpperCase","stringify","body","JSON","window","fetch","then","res","status","logout","location","reload","Promise","reject","message","dataRes","json","ok","useHttp","user"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,EAAP,MAAe,IAAf;AACA,OAAO,KAAKC,IAAZ,MAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,SAASC,WAAT,QAA4B,OAA5B;AAOA,OAAO,MAAMC,IAAI,GAAG,OAClBC,GADkB,EAElB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,OAAf;AAAwB,KAAGC;AAA3B,IAAqD,EAFnC,KAGf;AACH,QAAMC,MAAM,GAAG;AACbC,IAAAA,MAAM,EAAE,KADK;AAEbH,IAAAA,OAAO,EAAE;AACPI,MAAAA,aAAa,EAAEL,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB,EADpC;AAEP,sBAAgBD,IAAI,GAAG,kBAAH,GAAwB;AAFrC,KAFI;AAMb,OAAGG;AANU,GAAf;;AASA,MAAIC,MAAM,CAACC,MAAP,CAAcE,WAAd,OAAgC,KAApC,EAA2C;AACzCR,IAAAA,GAAG,GAAI,GAAEA,GAAI,IAAGN,EAAE,CAACe,SAAH,CAAaR,IAAb,CAAmB,EAAnC;AACD,GAFD,MAEO;AACLI,IAAAA,MAAM,CAACK,IAAP,GAAcC,IAAI,CAACF,SAAL,CAAeR,IAAI,IAAI,EAAvB,CAAd;AACD;;AAED,SAAOW,MAAM,CAACC,KAAP,CAAc,GAAEhB,OAAQ,IAAGG,GAAI,EAA/B,EAAkCK,MAAlC,EAA0CS,IAA1C,CAA+C,MAAOC,GAAP,IAAe;AACnE,QAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtB,YAAMrB,IAAI,CAACsB,MAAL,EAAN;AACAL,MAAAA,MAAM,CAACM,QAAP,CAAgBC,MAAhB;AACA,aAAOC,OAAO,CAACC,MAAR,CAAe;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAf,CAAP;AACD;;AACD,UAAMC,OAAO,GAAG,MAAMR,GAAG,CAACS,IAAJ,EAAtB;;AACA,QAAIT,GAAG,CAACU,EAAR,EAAY;AACV,aAAOF,OAAP;AACD,KAFD,MAEO;AACL,aAAOH,OAAO,CAACC,MAAR,CAAeE,OAAf,CAAP;AACD;AACF,GAZM,CAAP;AAaD,CAhCM;AAkCP,OAAO,MAAMG,OAAO,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAW/B,OAAO,EAAxB;AACA,SAAOE,WAAW,CAChB,CAAC,GAAG,CAACE,GAAD,EAAMK,MAAN,CAAJ,KACAN,IAAI,CAACC,GAAD,EAAM,EAAE,GAAGK,MAAL;AAAaH,IAAAA,KAAK,EAAEyB,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEzB;AAA1B,GAAN,CAFY,EAGhB,CAACyB,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEzB,KAAP,CAHgB,CAAlB;AAKD,CAPM;;GAAMwB,O;UACM9B,O","sourcesContent":["/*\n * @Descripttion: your project\n * @Author: huangjitao\n * @Date: 2021-04-22 22:16:18\n * @Function: use of this file\n */\nimport qs from \"qs\";\nimport * as auth from \"api/AuthProvider\";\nimport { useAuth } from \"context/AuthContext\";\nimport { baseUrl } from \"consts\";\nimport { useCallback } from \"react\";\n\ninterface IConfig extends RequestInit {\n  data?: object;\n  token?: string;\n}\n\nexport const http = async (\n  url: string,\n  { data, token, headers, ...customConfig }: IConfig = {}\n) => {\n  const config = {\n    method: \"GET\",\n    headers: {\n      Authorization: token ? `Bearer ${token}` : \"\",\n      \"Content-Type\": data ? \"application/json\" : \"\",\n    },\n    ...customConfig,\n  };\n\n  if (config.method.toUpperCase() === \"GET\") {\n    url = `${url}?${qs.stringify(data)}`;\n  } else {\n    config.body = JSON.stringify(data || {});\n  }\n\n  return window.fetch(`${baseUrl}/${url}`, config).then(async (res) => {\n    if (res.status === 401) {\n      await auth.logout();\n      window.location.reload();\n      return Promise.reject({ message: \"请重新登录\" });\n    }\n    const dataRes = await res.json();\n    if (res.ok) {\n      return dataRes;\n    } else {\n      return Promise.reject(dataRes);\n    }\n  });\n};\n\nexport const useHttp = () => {\n  const { user } = useAuth();\n  return useCallback(\n    (...[url, config]: Parameters<typeof http>) =>\n    http(url, { ...config, token: user?.token }),\n    [user?.token],\n  )\n};\n"]},"metadata":{},"sourceType":"module"}