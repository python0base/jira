{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n\n/*\n * @Descripttion: 项目相关请求封装\n * @Author: huangjitao\n * @Date: 2021-04-22 22:16:18\n * @Function: use of this file\n */\nimport { useMutation, useQuery } from \"react-query\";\nimport { cleanObject } from \"utils\";\nimport { useHttp } from \"utils/http\";\nimport { useDeleteOptimistic, useEditOptimistic } from \"utils/useOptimistic\";\nexport const useProjects = params => {\n  _s();\n\n  const httpFetch = useHttp();\n  return useQuery([\"projects\", params], () => httpFetch(\"projects\", {\n    data: cleanObject(params || {})\n  }));\n};\n\n_s(useProjects, \"6F6Tcaq4EAsyXXn1KZ+lav+As8A=\", false, function () {\n  return [useHttp, useQuery];\n});\n\nexport const useEditProject = queryKey => {\n  _s2();\n\n  const httpFetch = useHttp();\n  return useMutation(params => httpFetch(`projects/${params.id}`, {\n    data: params,\n    method: \"PATCH\"\n  }), useEditOptimistic(queryKey));\n};\n\n_s2(useEditProject, \"K+DxlA/8jp2MeGxe5FYxYItB1kU=\", false, function () {\n  return [useHttp, useMutation, useEditOptimistic];\n});\n\nexport const useAddProject = queryKey => {\n  _s3();\n\n  const httpFetch = useHttp();\n  return useMutation(params => httpFetch(`projects`, {\n    data: params,\n    method: \"POST\"\n  }), useEditOptimistic(queryKey));\n};\n\n_s3(useAddProject, \"K+DxlA/8jp2MeGxe5FYxYItB1kU=\", false, function () {\n  return [useHttp, useMutation, useEditOptimistic];\n});\n\nexport const useDeleteProject = queryKey => {\n  _s4();\n\n  const httpFetch = useHttp();\n  return useMutation(({\n    id\n  }) => httpFetch(`projects/${id}`, {\n    method: \"DELETE\"\n  }), useDeleteOptimistic(queryKey));\n};\n/**\n *\n * @param id 根据id请求project详细信息\n * @returns\n */\n\n_s4(useDeleteProject, \"3Y+bzaRGKtWfjfNRtbE/BdUkTlM=\", false, function () {\n  return [useHttp, useMutation, useDeleteOptimistic];\n});\n\nexport const useProject = id => {\n  _s5();\n\n  const httpFetch = useHttp();\n  return useQuery([\"project\", {\n    id\n  }], () => httpFetch(`projects/${id}`), {\n    enabled: Boolean(id)\n  });\n};\n\n_s5(useProject, \"6F6Tcaq4EAsyXXn1KZ+lav+As8A=\", false, function () {\n  return [useHttp, useQuery];\n});","map":{"version":3,"sources":["/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/api/Projects.ts"],"names":["useMutation","useQuery","cleanObject","useHttp","useDeleteOptimistic","useEditOptimistic","useProjects","params","httpFetch","data","useEditProject","queryKey","id","method","useAddProject","useDeleteProject","useProject","enabled","Boolean"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA,SAAmBA,WAAnB,EAAgCC,QAAhC,QAAgE,aAAhE;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,mBAAT,EAA8BC,iBAA9B,QAAuD,qBAAvD;AAGA,OAAO,MAAMC,WAAW,GAAIC,MAAD,IAA+B;AAAA;;AACxD,QAAMC,SAAS,GAAGL,OAAO,EAAzB;AACA,SAAOF,QAAQ,CAAY,CAAC,UAAD,EAAaM,MAAb,CAAZ,EAAkC,MAC/CC,SAAS,CAAC,UAAD,EAAa;AAAEC,IAAAA,IAAI,EAAEP,WAAW,CAACK,MAAM,IAAI,EAAX;AAAnB,GAAb,CADI,CAAf;AAGD,CALM;;GAAMD,W;UACOH,O,EACXF,Q;;;AAKT,OAAO,MAAMS,cAAc,GAAIC,QAAD,IAAwB;AAAA;;AACpD,QAAMH,SAAS,GAAGL,OAAO,EAAzB;AACA,SAAOH,WAAW,CACfO,MAAD,IACEC,SAAS,CAAE,YAAWD,MAAM,CAACK,EAAG,EAAvB,EAA0B;AACjCH,IAAAA,IAAI,EAAEF,MAD2B;AAEjCM,IAAAA,MAAM,EAAE;AAFyB,GAA1B,CAFK,EAMhBR,iBAAiB,CAACM,QAAD,CAND,CAAlB;AAQD,CAVM;;IAAMD,c;UACOP,O,EACXH,W,EAMLK,iB;;;AAIJ,OAAO,MAAMS,aAAa,GAAIH,QAAD,IAAwB;AAAA;;AACnD,QAAMH,SAAS,GAAGL,OAAO,EAAzB;AACA,SAAOH,WAAW,CACfO,MAAD,IACEC,SAAS,CAAE,UAAF,EAAa;AACpBC,IAAAA,IAAI,EAAEF,MADc;AAEpBM,IAAAA,MAAM,EAAE;AAFY,GAAb,CAFK,EAMhBR,iBAAiB,CAACM,QAAD,CAND,CAAlB;AAQD,CAVM;;IAAMG,a;UACOX,O,EACXH,W,EAMLK,iB;;;AAIJ,OAAO,MAAMU,gBAAgB,GAAIJ,QAAD,IAAwB;AAAA;;AACtD,QAAMH,SAAS,GAAGL,OAAO,EAAzB;AACA,SAAOH,WAAW,CAChB,CAAC;AAAEY,IAAAA;AAAF,GAAD,KACEJ,SAAS,CAAE,YAAWI,EAAG,EAAhB,EAAmB;AAC1BC,IAAAA,MAAM,EAAE;AADkB,GAAnB,CAFK,EAKhBT,mBAAmB,CAACO,QAAD,CALH,CAAlB;AAOD,CATM;AAWP;AACA;AACA;AACA;AACA;;IAfaI,gB;UACOZ,O,EACXH,W,EAKLI,mB;;;AASJ,OAAO,MAAMY,UAAU,GAAIJ,EAAD,IAAiB;AAAA;;AACzC,QAAMJ,SAAS,GAAGL,OAAO,EAAzB;AACA,SAAOF,QAAQ,CACb,CAAC,SAAD,EAAY;AAAEW,IAAAA;AAAF,GAAZ,CADa,EAEb,MAAMJ,SAAS,CAAE,YAAWI,EAAG,EAAhB,CAFF,EAGb;AACEK,IAAAA,OAAO,EAAEC,OAAO,CAACN,EAAD;AADlB,GAHa,CAAf;AAOD,CATM;;IAAMI,U;UACOb,O,EACXF,Q","sourcesContent":["/*\n * @Descripttion: 项目相关请求封装\n * @Author: huangjitao\n * @Date: 2021-04-22 22:16:18\n * @Function: use of this file\n */\nimport { Project } from \"types/Project\";\nimport { useProjectParamsSearch } from \"pages/projectList/utils\";\nimport { QueryKey, useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { cleanObject } from \"utils\";\nimport { useHttp } from \"utils/http\";\nimport { useDeleteOptimistic, useEditOptimistic } from \"utils/useOptimistic\";\nimport useUrlQueryParam from \"utils/useUrlQueryParam\";\n\nexport const useProjects = (params?: Partial<Project>) => {\n  const httpFetch = useHttp();\n  return useQuery<Project[]>([\"projects\", params], () =>\n    httpFetch(\"projects\", { data: cleanObject(params || {}) })\n  );\n};\n\nexport const useEditProject = (queryKey: QueryKey) => {\n  const httpFetch = useHttp();\n  return useMutation(\n    (params: Partial<Project>) =>\n      httpFetch(`projects/${params.id}`, {\n        data: params,\n        method: \"PATCH\",\n      }),\n    useEditOptimistic(queryKey)\n  );\n};\n\nexport const useAddProject = (queryKey: QueryKey) => {\n  const httpFetch = useHttp();\n  return useMutation(\n    (params: Partial<Project>) =>\n      httpFetch(`projects`, {\n        data: params,\n        method: \"POST\",\n      }),\n    useEditOptimistic(queryKey)\n  );\n};\n\nexport const useDeleteProject = (queryKey: QueryKey) => {\n  const httpFetch = useHttp();\n  return useMutation(\n    ({ id }: { id: number }) =>\n      httpFetch(`projects/${id}`, {\n        method: \"DELETE\",\n      }),\n    useDeleteOptimistic(queryKey)\n  );\n};\n\n/**\n *\n * @param id 根据id请求project详细信息\n * @returns\n */\nexport const useProject = (id?: number) => {\n  const httpFetch = useHttp();\n  return useQuery<Project>(\n    [\"project\", { id }],\n    () => httpFetch(`projects/${id}`),\n    {\n      enabled: Boolean(id),\n    }\n  );\n};\n"]},"metadata":{},"sourceType":"module"}