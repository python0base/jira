{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\"; // @ts-nocheck\n\nimport React from 'react';\nimport { useTheme } from './theme';\nimport useMediaQuery from './useMediaQuery';\nexport var isServer = typeof window === 'undefined';\nexport function getQueryStatusColor(query, theme) {\n  return query.state.isFetching ? theme.active : query.isStale() ? theme.warning : !query.observers.length ? theme.gray : theme.success;\n}\nexport function getQueryStatusLabel(query) {\n  return query.state.isFetching ? 'fetching' : !query.observers.length ? 'inactive' : query.isStale() ? 'stale' : 'fresh';\n}\nexport function styled(type, newStyles, queries) {\n  if (queries === void 0) {\n    queries = {};\n  }\n\n  return /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n    var style = _ref.style,\n        rest = _objectWithoutPropertiesLoose(_ref, [\"style\"]);\n\n    var theme = useTheme();\n    var mediaStyles = Object.entries(queries).reduce(function (current, _ref2) {\n      var key = _ref2[0],\n          value = _ref2[1]; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n      return useMediaQuery(key) ? _extends({}, current, typeof value === 'function' ? value(rest, theme) : value) : current;\n    }, {});\n    return /*#__PURE__*/React.createElement(type, _extends({}, rest, {\n      style: _extends({}, typeof newStyles === 'function' ? newStyles(rest, theme) : newStyles, style, mediaStyles),\n      ref: ref\n    }));\n  });\n}\n\nfunction useIsMounted() {\n  var mountedRef = React.useRef(false);\n  var isMounted = React.useCallback(function () {\n    return mountedRef.current;\n  }, []);\n  React[isServer ? 'useEffect' : 'useLayoutEffect'](function () {\n    mountedRef.current = true;\n    return function () {\n      mountedRef.current = false;\n    };\n  }, []);\n  return isMounted;\n}\n/**\n * This hook is a safe useState version which schedules state updates in microtasks\n * to prevent updating a component state while React is rendering different components\n * or when the component is not mounted anymore.\n */\n\n\nexport function useSafeState(initialState) {\n  var isMounted = useIsMounted();\n\n  var _React$useState = React.useState(initialState),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var safeSetState = React.useCallback(function (value) {\n    scheduleMicrotask(function () {\n      if (isMounted()) {\n        setState(value);\n      }\n    });\n  }, [isMounted]);\n  return [state, safeSetState];\n}\n/**\n * Schedules a microtask.\n * This can be useful to schedule state updates after rendering.\n */\n\nfunction scheduleMicrotask(callback) {\n  Promise.resolve().then(callback).catch(function (error) {\n    return setTimeout(function () {\n      throw error;\n    });\n  });\n}","map":{"version":3,"sources":["/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/node_modules/react-query/es/devtools/utils.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","useTheme","useMediaQuery","isServer","window","getQueryStatusColor","query","theme","state","isFetching","active","isStale","warning","observers","length","gray","success","getQueryStatusLabel","styled","type","newStyles","queries","forwardRef","_ref","ref","style","rest","mediaStyles","Object","entries","reduce","current","_ref2","key","value","createElement","useIsMounted","mountedRef","useRef","isMounted","useCallback","useSafeState","initialState","_React$useState","useState","setState","safeSetState","scheduleMicrotask","callback","Promise","resolve","then","catch","error","setTimeout"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,IAAIC,QAAQ,GAAG,OAAOC,MAAP,KAAkB,WAAjC;AACP,OAAO,SAASC,mBAAT,CAA6BC,KAA7B,EAAoCC,KAApC,EAA2C;AAChD,SAAOD,KAAK,CAACE,KAAN,CAAYC,UAAZ,GAAyBF,KAAK,CAACG,MAA/B,GAAwCJ,KAAK,CAACK,OAAN,KAAkBJ,KAAK,CAACK,OAAxB,GAAkC,CAACN,KAAK,CAACO,SAAN,CAAgBC,MAAjB,GAA0BP,KAAK,CAACQ,IAAhC,GAAuCR,KAAK,CAACS,OAA9H;AACD;AACD,OAAO,SAASC,mBAAT,CAA6BX,KAA7B,EAAoC;AACzC,SAAOA,KAAK,CAACE,KAAN,CAAYC,UAAZ,GAAyB,UAAzB,GAAsC,CAACH,KAAK,CAACO,SAAN,CAAgBC,MAAjB,GAA0B,UAA1B,GAAuCR,KAAK,CAACK,OAAN,KAAkB,OAAlB,GAA4B,OAAhH;AACD;AACD,OAAO,SAASO,MAAT,CAAgBC,IAAhB,EAAsBC,SAAtB,EAAiCC,OAAjC,EAA0C;AAC/C,MAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AACtBA,IAAAA,OAAO,GAAG,EAAV;AACD;;AAED,SAAO,aAAarB,KAAK,CAACsB,UAAN,CAAiB,UAAUC,IAAV,EAAgBC,GAAhB,EAAqB;AACxD,QAAIC,KAAK,GAAGF,IAAI,CAACE,KAAjB;AAAA,QACIC,IAAI,GAAG3B,6BAA6B,CAACwB,IAAD,EAAO,CAAC,OAAD,CAAP,CADxC;;AAGA,QAAIhB,KAAK,GAAGN,QAAQ,EAApB;AACA,QAAI0B,WAAW,GAAGC,MAAM,CAACC,OAAP,CAAeR,OAAf,EAAwBS,MAAxB,CAA+B,UAAUC,OAAV,EAAmBC,KAAnB,EAA0B;AACzE,UAAIC,GAAG,GAAGD,KAAK,CAAC,CAAD,CAAf;AAAA,UACIE,KAAK,GAAGF,KAAK,CAAC,CAAD,CADjB,CADyE,CAGzE;;AACA,aAAO9B,aAAa,CAAC+B,GAAD,CAAb,GAAqBnC,QAAQ,CAAC,EAAD,EAAKiC,OAAL,EAAc,OAAOG,KAAP,KAAiB,UAAjB,GAA8BA,KAAK,CAACR,IAAD,EAAOnB,KAAP,CAAnC,GAAmD2B,KAAjE,CAA7B,GAAuGH,OAA9G;AACD,KALiB,EAKf,EALe,CAAlB;AAMA,WAAO,aAAa/B,KAAK,CAACmC,aAAN,CAAoBhB,IAApB,EAA0BrB,QAAQ,CAAC,EAAD,EAAK4B,IAAL,EAAW;AAC/DD,MAAAA,KAAK,EAAE3B,QAAQ,CAAC,EAAD,EAAK,OAAOsB,SAAP,KAAqB,UAArB,GAAkCA,SAAS,CAACM,IAAD,EAAOnB,KAAP,CAA3C,GAA2Da,SAAhE,EAA2EK,KAA3E,EAAkFE,WAAlF,CADgD;AAE/DH,MAAAA,GAAG,EAAEA;AAF0D,KAAX,CAAlC,CAApB;AAID,GAfmB,CAApB;AAgBD;;AAED,SAASY,YAAT,GAAwB;AACtB,MAAIC,UAAU,GAAGrC,KAAK,CAACsC,MAAN,CAAa,KAAb,CAAjB;AACA,MAAIC,SAAS,GAAGvC,KAAK,CAACwC,WAAN,CAAkB,YAAY;AAC5C,WAAOH,UAAU,CAACN,OAAlB;AACD,GAFe,EAEb,EAFa,CAAhB;AAGA/B,EAAAA,KAAK,CAACG,QAAQ,GAAG,WAAH,GAAiB,iBAA1B,CAAL,CAAkD,YAAY;AAC5DkC,IAAAA,UAAU,CAACN,OAAX,GAAqB,IAArB;AACA,WAAO,YAAY;AACjBM,MAAAA,UAAU,CAACN,OAAX,GAAqB,KAArB;AACD,KAFD;AAGD,GALD,EAKG,EALH;AAMA,SAAOQ,SAAP;AACD;AACD;AACA;AACA;AACA;AACA;;;AAGA,OAAO,SAASE,YAAT,CAAsBC,YAAtB,EAAoC;AACzC,MAAIH,SAAS,GAAGH,YAAY,EAA5B;;AAEA,MAAIO,eAAe,GAAG3C,KAAK,CAAC4C,QAAN,CAAeF,YAAf,CAAtB;AAAA,MACIlC,KAAK,GAAGmC,eAAe,CAAC,CAAD,CAD3B;AAAA,MAEIE,QAAQ,GAAGF,eAAe,CAAC,CAAD,CAF9B;;AAIA,MAAIG,YAAY,GAAG9C,KAAK,CAACwC,WAAN,CAAkB,UAAUN,KAAV,EAAiB;AACpDa,IAAAA,iBAAiB,CAAC,YAAY;AAC5B,UAAIR,SAAS,EAAb,EAAiB;AACfM,QAAAA,QAAQ,CAACX,KAAD,CAAR;AACD;AACF,KAJgB,CAAjB;AAKD,GANkB,EAMhB,CAACK,SAAD,CANgB,CAAnB;AAOA,SAAO,CAAC/B,KAAD,EAAQsC,YAAR,CAAP;AACD;AACD;AACA;AACA;AACA;;AAEA,SAASC,iBAAT,CAA2BC,QAA3B,EAAqC;AACnCC,EAAAA,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuBH,QAAvB,EAAiCI,KAAjC,CAAuC,UAAUC,KAAV,EAAiB;AACtD,WAAOC,UAAU,CAAC,YAAY;AAC5B,YAAMD,KAAN;AACD,KAFgB,CAAjB;AAGD,GAJD;AAKD","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n// @ts-nocheck\nimport React from 'react';\nimport { useTheme } from './theme';\nimport useMediaQuery from './useMediaQuery';\nexport var isServer = typeof window === 'undefined';\nexport function getQueryStatusColor(query, theme) {\n  return query.state.isFetching ? theme.active : query.isStale() ? theme.warning : !query.observers.length ? theme.gray : theme.success;\n}\nexport function getQueryStatusLabel(query) {\n  return query.state.isFetching ? 'fetching' : !query.observers.length ? 'inactive' : query.isStale() ? 'stale' : 'fresh';\n}\nexport function styled(type, newStyles, queries) {\n  if (queries === void 0) {\n    queries = {};\n  }\n\n  return /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n    var style = _ref.style,\n        rest = _objectWithoutPropertiesLoose(_ref, [\"style\"]);\n\n    var theme = useTheme();\n    var mediaStyles = Object.entries(queries).reduce(function (current, _ref2) {\n      var key = _ref2[0],\n          value = _ref2[1];\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      return useMediaQuery(key) ? _extends({}, current, typeof value === 'function' ? value(rest, theme) : value) : current;\n    }, {});\n    return /*#__PURE__*/React.createElement(type, _extends({}, rest, {\n      style: _extends({}, typeof newStyles === 'function' ? newStyles(rest, theme) : newStyles, style, mediaStyles),\n      ref: ref\n    }));\n  });\n}\n\nfunction useIsMounted() {\n  var mountedRef = React.useRef(false);\n  var isMounted = React.useCallback(function () {\n    return mountedRef.current;\n  }, []);\n  React[isServer ? 'useEffect' : 'useLayoutEffect'](function () {\n    mountedRef.current = true;\n    return function () {\n      mountedRef.current = false;\n    };\n  }, []);\n  return isMounted;\n}\n/**\n * This hook is a safe useState version which schedules state updates in microtasks\n * to prevent updating a component state while React is rendering different components\n * or when the component is not mounted anymore.\n */\n\n\nexport function useSafeState(initialState) {\n  var isMounted = useIsMounted();\n\n  var _React$useState = React.useState(initialState),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var safeSetState = React.useCallback(function (value) {\n    scheduleMicrotask(function () {\n      if (isMounted()) {\n        setState(value);\n      }\n    });\n  }, [isMounted]);\n  return [state, safeSetState];\n}\n/**\n * Schedules a microtask.\n * This can be useful to schedule state updates after rendering.\n */\n\nfunction scheduleMicrotask(callback) {\n  Promise.resolve().then(callback).catch(function (error) {\n    return setTimeout(function () {\n      throw error;\n    });\n  });\n}"]},"metadata":{},"sourceType":"module"}