{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$();\n\n/*\n * @Descripttion: 乐观更新通用hook\n * @Author: huangjitao\n * @Date: 2021-07-13 22:09:45\n * @Function: 该文件用途描述\n */\nimport { reorder } from \"pages/projectBoard/utils\";\nimport { useQueryClient } from \"react-query\";\n\nconst useOptimistic = (queryKey, callback) => {\n  _s();\n\n  const queryClient = useQueryClient();\n  return {\n    onSuccess: () => queryClient.invalidateQueries(queryKey),\n    onMutate: async target => {\n      // 乐观更新\n      const previousItems = queryClient.getQueryData(queryKey);\n      queryClient.setQueryData(queryKey, old => {\n        return callback(target, old);\n      });\n      return {\n        previousItems\n      };\n    },\n    onError: (error, newItem, context) => {\n      // 修改失败，回滚数据\n      queryClient.setQueryData(queryKey, context.previousItems);\n    }\n  };\n};\n\n_s(useOptimistic, \"4R+oYVB2Uc11P7bp1KcuhpkfaTw=\", false, function () {\n  return [useQueryClient];\n});\n\nexport const useEditOptimistic = queryKey => {\n  _s2();\n\n  return useOptimistic(queryKey, (target, old) => (old === null || old === void 0 ? void 0 : old.map(item => item.id === target.id ? { ...item,\n    ...target\n  } : item)) || []);\n};\n\n_s2(useEditOptimistic, \"+WirQKSM9lUppDLo45xSReZHx3U=\", false, function () {\n  return [useOptimistic];\n});\n\nexport const useDeleteOptimistic = queryKey => {\n  _s3();\n\n  return useOptimistic(queryKey, (target, old) => (old === null || old === void 0 ? void 0 : old.filter(item => item.id !== target.id)) || []);\n};\n\n_s3(useDeleteOptimistic, \"+WirQKSM9lUppDLo45xSReZHx3U=\", false, function () {\n  return [useOptimistic];\n});\n\nexport const useAddOptimistic = queryKey => {\n  _s4();\n\n  return useOptimistic(queryKey, (target, old) => old ? [...old, target] : [target]);\n};\n\n_s4(useAddOptimistic, \"+WirQKSM9lUppDLo45xSReZHx3U=\", false, function () {\n  return [useOptimistic];\n});\n\nexport const useReorderKanbanOptimistic = queryKey => {\n  _s5();\n\n  return useOptimistic(queryKey, (target, old) => reorder({\n    list: old,\n    ...target\n  }));\n};\n\n_s5(useReorderKanbanOptimistic, \"+WirQKSM9lUppDLo45xSReZHx3U=\", false, function () {\n  return [useOptimistic];\n});\n\nexport const useReorderTaskOptimistic = queryKey => {\n  _s6();\n\n  return useOptimistic(queryKey, (target, old) => {\n    const orderedList = reorder({\n      list: old,\n      ...target\n    });\n    return orderedList.map(item => item.id === target.fromId ? { ...item,\n      kanbanId: target.toKanbanId\n    } : item);\n  });\n};\n\n_s6(useReorderTaskOptimistic, \"+WirQKSM9lUppDLo45xSReZHx3U=\", false, function () {\n  return [useOptimistic];\n});\n\nexport default useOptimistic;","map":{"version":3,"sources":["/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/utils/useOptimistic.ts"],"names":["reorder","useQueryClient","useOptimistic","queryKey","callback","queryClient","onSuccess","invalidateQueries","onMutate","target","previousItems","getQueryData","setQueryData","old","onError","error","newItem","context","useEditOptimistic","map","item","id","useDeleteOptimistic","filter","useAddOptimistic","useReorderKanbanOptimistic","list","useReorderTaskOptimistic","orderedList","fromId","kanbanId","toKanbanId"],"mappings":"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","sourcesContent":["/*\n * @Descripttion: 乐观更新通用hook\n * @Author: huangjitao\n * @Date: 2021-07-13 22:09:45\n * @Function: 该文件用途描述\n */\n\nimport { reorder } from \"pages/projectBoard/utils\";\nimport { QueryKey, useQueryClient } from \"react-query\";\nimport { Task } from \"types/Task\";\n\nconst useOptimistic = (\n  queryKey: QueryKey,\n  callback: (target: any, old?: any[]) => any[]\n) => {\n  const queryClient = useQueryClient();\n  return {\n    onSuccess: () => queryClient.invalidateQueries(queryKey),\n    onMutate: async (target: any) => {\n      // 乐观更新\n      const previousItems = queryClient.getQueryData(queryKey);\n      queryClient.setQueryData(queryKey, (old?: any[]) => {\n        return callback(target, old);\n      });\n      return { previousItems };\n    },\n    onError: (error: Error, newItem: any, context: any) => {\n      // 修改失败，回滚数据\n      queryClient.setQueryData(queryKey, context.previousItems);\n    },\n  };\n};\n\nexport const useEditOptimistic = (queryKey: QueryKey) =>\n  useOptimistic(\n    queryKey,\n    (target, old) =>\n      old?.map((item) =>\n        item.id === target.id ? { ...item, ...target } : item\n      ) || []\n  );\n\nexport const useDeleteOptimistic = (queryKey: QueryKey) =>\n  useOptimistic(\n    queryKey,\n    (target, old) => old?.filter((item) => item.id !== target.id) || []\n  );\n\nexport const useAddOptimistic = (queryKey: QueryKey) =>\n  useOptimistic(queryKey, (target, old) => (old ? [...old, target] : [target]));\n\nexport const useReorderKanbanOptimistic = (queryKey: QueryKey) =>\n  useOptimistic(queryKey, (target, old) => reorder({ list: old, ...target }));\n\nexport const useReorderTaskOptimistic = (queryKey: QueryKey) =>\n  useOptimistic(queryKey, (target, old) => {\n    const orderedList = reorder({ list: old, ...target }) as Task[];\n    return orderedList.map((item) =>\n      item.id === target.fromId\n        ? { ...item, kanbanId: target.toKanbanId }\n        : item\n    );\n  });\n\nexport default useOptimistic;\n"]},"metadata":{},"sourceType":"module"}