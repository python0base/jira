{"ast":null,"code":"var _jsxFileName = \"/Users/haoyan/reactpro/\\u9879\\u76EE/jira\\u9879\\u76EE/fake-jira-main/src/pages/taskGroup/index.tsx\",\n    _s = $RefreshSig$();\n\n/*\n * @Descripttion: 任务组页面\n * @Author: huangjitao\n * @Date: 2021-04-24 21:03:13\n * @Function: use of this file\n */\nimport { Button, List, Modal } from \"antd\";\nimport { useDeleteEpic, useEpics } from \"api/Epic\";\nimport { useTasks } from \"api/Task\";\nimport { Container, Row } from \"components\";\nimport dayjs from \"dayjs\";\nimport { useProjectInUrl } from \"pages/projectBoard/utils\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CreateEpic } from \"./components/CreateEpic\";\nimport { useEpicSearchParams, useEpicsQueryKey } from \"./utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskGroup = () => {\n  _s();\n\n  const {\n    data: currentProject\n  } = useProjectInUrl();\n  const {\n    data: epics\n  } = useEpics(useEpicSearchParams());\n  const {\n    data: tasks\n  } = useTasks({\n    projectId: currentProject === null || currentProject === void 0 ? void 0 : currentProject.id\n  });\n  const {\n    mutate: deleteEpic\n  } = useDeleteEpic(useEpicsQueryKey());\n  const [epicCreateOpen, setEpicCreateOpen] = useState(false);\n\n  const confirmDeleteEpic = epic => {\n    Modal.confirm({\n      title: `确定删除项目组：${epic.name}`,\n      content: \"点击确定删除\",\n      okText: \"确定\",\n\n      onOk() {\n        deleteEpic({\n          id: epic.id\n        });\n      }\n\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [currentProject === null || currentProject === void 0 ? void 0 : currentProject.name, \"\\u4EFB\\u52A1\\u7EC4\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setEpicCreateOpen(true),\n        type: \"link\",\n        children: \"\\u521B\\u5EFA\\u4EFB\\u52A1\\u7EC4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      style: {\n        overflow: \"scroll\"\n      },\n      dataSource: epics,\n      itemLayout: \"vertical\",\n      renderItem: epic => /*#__PURE__*/_jsxDEV(List.Item, {\n        children: [/*#__PURE__*/_jsxDEV(List.Item.Meta, {\n          title: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: epic.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => confirmDeleteEpic(epic),\n              type: \"link\",\n              children: \"\\u5220\\u9664\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this),\n          description: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\u5F00\\u59CB\\u65F6\\u95F4\\uFF1A\", dayjs(epic.start).format(\"YYYY-MM-DD\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"\\u7ED3\\u675F\\u65F6\\u95F4\\uFF1A\", dayjs(epic.end).format(\"YYYY-MM-DD\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: tasks === null || tasks === void 0 ? void 0 : tasks.filter(task => task.epicId === epic.id).map(task => /*#__PURE__*/_jsxDEV(Link, {\n            to: `/projects/${currentProject === null || currentProject === void 0 ? void 0 : currentProject.id}/kanban?editingTaskId=${task.id}`,\n            children: task.name\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateEpic, {\n      onClose: () => setEpicCreateOpen(false),\n      visible: epicCreateOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TaskGroup, \"k3y6um+NRvnx0gyJlxm/5HhqyP8=\", false, function () {\n  return [useProjectInUrl, useEpics, useEpicSearchParams, useTasks, useDeleteEpic, useEpicsQueryKey];\n});\n\n_c = TaskGroup;\nexport default TaskGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskGroup\");","map":{"version":3,"sources":["/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/taskGroup/index.tsx"],"names":["Button","List","Modal","useDeleteEpic","useEpics","useTasks","Container","Row","dayjs","useProjectInUrl","useState","Link","CreateEpic","useEpicSearchParams","useEpicsQueryKey","TaskGroup","data","currentProject","epics","tasks","projectId","id","mutate","deleteEpic","epicCreateOpen","setEpicCreateOpen","confirmDeleteEpic","epic","confirm","title","name","content","okText","onOk","overflow","start","format","end","filter","task","epicId","map"],"mappings":"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","sourcesContent":["/*\n * @Descripttion: 任务组页面\n * @Author: huangjitao\n * @Date: 2021-04-24 21:03:13\n * @Function: use of this file\n */\n\nimport { Button, List, Modal } from \"antd\";\nimport { useDeleteEpic, useEpics } from \"api/Epic\";\nimport { useTasks } from \"api/Task\";\nimport { Container, Row } from \"components\";\nimport dayjs from \"dayjs\";\nimport { useProjectInUrl } from \"pages/projectBoard/utils\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Epic } from \"types/Epic\";\nimport { CreateEpic } from \"./components/CreateEpic\";\nimport { useEpicSearchParams, useEpicsQueryKey } from \"./utils\";\n\nconst TaskGroup = () => {\n  const { data: currentProject } = useProjectInUrl();\n  const { data: epics } = useEpics(useEpicSearchParams());\n  const { data: tasks } = useTasks({ projectId: currentProject?.id });\n  const { mutate: deleteEpic } = useDeleteEpic(useEpicsQueryKey());\n  const [epicCreateOpen, setEpicCreateOpen] = useState(false);\n\n  const confirmDeleteEpic = (epic: Epic) => {\n    Modal.confirm({\n      title: `确定删除项目组：${epic.name}`,\n      content: \"点击确定删除\",\n      okText: \"确定\",\n      onOk() {\n        deleteEpic({ id: epic.id });\n      },\n    });\n  };\n\n  return (\n    <Container>\n      <Row>\n        <h1>{currentProject?.name}任务组</h1>\n        <Button onClick={() => setEpicCreateOpen(true)} type={\"link\"}>\n          创建任务组\n        </Button>\n      </Row>\n      <List\n        style={{ overflow: \"scroll\" }}\n        dataSource={epics}\n        itemLayout={\"vertical\"}\n        renderItem={(epic) => (\n          <List.Item>\n            <List.Item.Meta\n              title={\n                <Row>\n                  <span>{epic.name}</span>\n                  <Button onClick={() => confirmDeleteEpic(epic)} type={\"link\"}>\n                    删除\n                  </Button>\n                </Row>\n              }\n              description={\n                <div>\n                  <div>开始时间：{dayjs(epic.start).format(\"YYYY-MM-DD\")}</div>\n                  <div>结束时间：{dayjs(epic.end).format(\"YYYY-MM-DD\")}</div>\n                </div>\n              }\n            />\n            <div>\n              {tasks\n                ?.filter((task) => task.epicId === epic.id)\n                .map((task) => (\n                  <Link\n                    to={`/projects/${currentProject?.id}/kanban?editingTaskId=${task.id}`}\n                    key={task.id}\n                  >\n                    {task.name}\n                  </Link>\n                ))}\n            </div>\n          </List.Item>\n        )}\n      />\n      <CreateEpic\n        onClose={() => setEpicCreateOpen(false)}\n        visible={epicCreateOpen}\n      />\n    </Container>\n  );\n};\n\nexport default TaskGroup;\n"]},"metadata":{},"sourceType":"module"}