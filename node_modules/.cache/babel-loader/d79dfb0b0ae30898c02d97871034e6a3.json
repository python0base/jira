{"ast":null,"code":"var _jsxFileName = \"/Users/haoyan/reactpro/\\u9879\\u76EE/jira\\u9879\\u76EE/fake-jira-main/src/components/FullError.tsx\";\n\n/*\n * @Descripttion: 全局错误信息组件\n * @Author: huangjitao\n * @Date: 2021-04-23 21:06:26\n * @Function: use of this file\n */\nimport { Typography } from \"antd\";\nimport { FullPage } from \"components/Loading\";\nimport { DevTools } from \"jira-dev-tool\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isError = value => value === null || value === void 0 ? void 0 : value.message;\n\nexport const ErrorBox = ({\n  error\n}) => {\n  if (isError(error)) {\n    return /*#__PURE__*/_jsxDEV(Typography.Text, {\n      type: \"danger\",\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  } else {\n    return null;\n  }\n};\n_c = ErrorBox;\n\nconst FullError = ({\n  error\n}) => /*#__PURE__*/_jsxDEV(FullPage, {\n  children: [/*#__PURE__*/_jsxDEV(DevTools, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Typography.Text, {\n    children: error === null || error === void 0 ? void 0 : error.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 23,\n  columnNumber: 3\n}, this);\n\n_c2 = FullError;\nexport default FullError;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ErrorBox\");\n$RefreshReg$(_c2, \"FullError\");","map":{"version":3,"sources":["/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/components/FullError.tsx"],"names":["Typography","FullPage","DevTools","isError","value","message","ErrorBox","error","FullError"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,UAAT,QAA2B,MAA3B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,QAAT,QAAyB,eAAzB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAgCA,KAAhC,aAAgCA,KAAhC,uBAAgCA,KAAK,CAAEC,OAAvD;;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmC;AACzD,MAAIJ,OAAO,CAACI,KAAD,CAAX,EAAoB;AAClB,wBAAO,QAAC,UAAD,CAAY,IAAZ;AAAiB,MAAA,IAAI,EAAC,QAAtB;AAAA,gBAAgCA,KAAK,CAACF;AAAtC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO;AACL,WAAO,IAAP;AACD;AACF,CANM;KAAMC,Q;;AAQb,MAAME,SAAS,GAAG,CAAC;AAAED,EAAAA;AAAF,CAAD,kBAChB,QAAC,QAAD;AAAA,0BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,UADF,eAEE,QAAC,UAAD,CAAY,IAAZ;AAAA,cAAkBA,KAAlB,aAAkBA,KAAlB,uBAAkBA,KAAK,CAAEF;AAAzB;AAAA;AAAA;AAAA;AAAA,UAFF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;MAAMG,S;AAON,eAAeA,SAAf","sourcesContent":["/*\n * @Descripttion: 全局错误信息组件\n * @Author: huangjitao\n * @Date: 2021-04-23 21:06:26\n * @Function: use of this file\n */\n\nimport { Typography } from \"antd\";\nimport { FullPage } from \"components/Loading\";\nimport { DevTools } from \"jira-dev-tool\";\n\nconst isError = (value: any): value is Error => value?.message;\n\nexport const ErrorBox = ({ error }: { error: unknown }) => {\n  if (isError(error)) {\n    return <Typography.Text type=\"danger\">{error.message}</Typography.Text>;\n  } else {\n    return null;\n  }\n};\n\nconst FullError = ({ error }: { error: Error | null }) => (\n  <FullPage>\n    <DevTools />\n    <Typography.Text>{error?.message}</Typography.Text>\n  </FullPage>\n);\n\nexport default FullError;\n"]},"metadata":{},"sourceType":"module"}