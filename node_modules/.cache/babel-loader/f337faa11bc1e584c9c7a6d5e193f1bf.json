{"ast":null,"code":"var _jsxFileName = \"/Users/haoyan/reactpro/\\u9879\\u76EE/jira\\u9879\\u76EE/fake-jira-main/src/pages/projectList/components/SearchList.tsx\",\n    _s2 = $RefreshSig$();\n\n/*\n * @Descripttion: 搜索结果展示列表\n * @Author: huangjitao\n * @Date: 2021-04-11 21:24:19\n * @Function: use of this file\n */\nimport { Button, Dropdown, Menu, Modal, Table } from \"antd\";\nimport dayjs from \"dayjs\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Pin } from \"components\";\nimport { useDeleteProject, useEditProject } from \"api/Projects\";\nimport { useProjectModal, useProjectsQueryKey } from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchList = /*#__PURE__*/React.memo(_c = _s2(props => {\n  var _s = $RefreshSig$();\n\n  _s2();\n\n  const {\n    mutate\n  } = useEditProject(useProjectsQueryKey());\n\n  const pinProject = id => pin => mutate({\n    id,\n    pin\n  });\n\n  console.log(\"list render\");\n\n  const More = ({\n    project\n  }) => {\n    _s();\n\n    const {\n      startEdit\n    } = useProjectModal();\n\n    const editProject = id => () => startEdit(id);\n\n    const {\n      mutate: deleteProject\n    } = useDeleteProject(useProjectsQueryKey());\n\n    const confirmDeleteProject = id => {\n      Modal.confirm({\n        title: \"确定删除这个项目吗?\",\n        content: \"点击确定删除\",\n        okText: \"确定\",\n\n        onOk() {\n          deleteProject({\n            id\n          });\n        }\n\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(Dropdown, {\n      overlay: /*#__PURE__*/_jsxDEV(Menu, {\n        children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n          onClick: editProject(project.id),\n          children: \"\\u7F16\\u8F91\"\n        }, \"edit\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          onClick: () => confirmDeleteProject(project.id),\n          children: \"\\u5220\\u9664\"\n        }, \"delete\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"link\",\n        children: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s(More, \"47GSGzHK5XqkzjgpNSv4zRGfhyc=\", false, function () {\n    return [useProjectModal, useDeleteProject, useProjectsQueryKey];\n  });\n\n  return /*#__PURE__*/_jsxDEV(Table, {\n    rowKey: \"id\",\n    pagination: false,\n    columns: [{\n      title: /*#__PURE__*/_jsxDEV(Pin, {\n        checked: true,\n        disabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 18\n      }, this),\n\n      render(value, project) {\n        return /*#__PURE__*/_jsxDEV(Pin, {\n          checked: project.pin,\n          onCheckedChange: pinProject(project.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this);\n      }\n\n    }, {\n      title: \"名称\",\n      dataIndex: \"name\",\n      sorter: (a, b) => a.name.localeCompare(b.name),\n\n      render(value, project) {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: String(project.id),\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 20\n        }, this);\n      }\n\n    }, {\n      title: \"部门\",\n      dataIndex: \"organization\"\n    }, {\n      title: \"负责人\",\n\n      render(value, project) {\n        var _props$users$find;\n\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: ((_props$users$find = props.users.find(user => user.id === project.personId)) === null || _props$users$find === void 0 ? void 0 : _props$users$find.name) || \"未知\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this);\n      }\n\n    }, {\n      title: \"创建时间\",\n\n      render(value, project) {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: project.created ? dayjs(project.created).format(\"YYYY-MM-DD\") : \"无\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this);\n      }\n\n    }, {\n      render(value, project) {\n        return /*#__PURE__*/_jsxDEV(More, {\n          project: project\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 20\n        }, this);\n      }\n\n    }],\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}, \"Y04/wO6s7wGvglXyDyMDiMUXX7Y=\", false, function () {\n  return [useEditProject, useProjectsQueryKey];\n}));\n_c2 = SearchList;\nexport default SearchList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SearchList$React.memo\");\n$RefreshReg$(_c2, \"SearchList\");","map":{"version":3,"sources":["/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/pages/projectList/components/SearchList.tsx"],"names":["Button","Dropdown","Menu","Modal","Table","dayjs","React","Link","Pin","useDeleteProject","useEditProject","useProjectModal","useProjectsQueryKey","SearchList","memo","props","mutate","pinProject","id","pin","console","log","More","project","startEdit","editProject","deleteProject","confirmDeleteProject","confirm","title","content","okText","onOk","render","value","dataIndex","sorter","a","b","name","localeCompare","String","users","find","user","personId","created","format"],"mappings":"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","sourcesContent":["/*\n * @Descripttion: 搜索结果展示列表\n * @Author: huangjitao\n * @Date: 2021-04-11 21:24:19\n * @Function: use of this file\n */\nimport { Button, Dropdown, Menu, Modal, Table, TableProps } from \"antd\";\nimport dayjs from \"dayjs\";\nimport React from \"react\";\nimport { User } from \"types/User\";\nimport { Link } from \"react-router-dom\";\nimport { Pin } from \"components\";\nimport { useDeleteProject, useEditProject } from \"api/Projects\";\nimport { useProjectModal, useProjectsQueryKey } from \"../utils\";\nimport { Project } from \"types/Project\";\n\ninterface ISearchListProps extends TableProps<Project> {\n  users: User[];\n}\n\nconst SearchList = React.memo((props: ISearchListProps) => {\n  const { mutate } = useEditProject(useProjectsQueryKey());\n  const pinProject = (id: number) => (pin: boolean) => mutate({ id, pin });\n\n  console.log(\"list render\");\n\n  const More = ({ project }: { project: Project }) => {\n    const { startEdit } = useProjectModal();\n    const editProject = (id: number) => () => startEdit(id);\n    const { mutate: deleteProject } = useDeleteProject(useProjectsQueryKey());\n    const confirmDeleteProject = (id: number) => {\n      Modal.confirm({\n        title: \"确定删除这个项目吗?\",\n        content: \"点击确定删除\",\n        okText: \"确定\",\n        onOk() {\n          deleteProject({ id });\n        },\n      });\n    };\n    return (\n      <Dropdown\n        overlay={\n          <Menu>\n            <Menu.Item onClick={editProject(project.id)} key={\"edit\"}>\n              编辑\n            </Menu.Item>\n            <Menu.Item\n              onClick={() => confirmDeleteProject(project.id)}\n              key={\"delete\"}\n            >\n              删除\n            </Menu.Item>\n          </Menu>\n        }\n      >\n        <Button type={\"link\"}>...</Button>\n      </Dropdown>\n    );\n  };\n\n  return (\n    <Table\n      rowKey=\"id\"\n      pagination={false}\n      columns={[\n        {\n          title: <Pin checked={true} disabled={true} />,\n          render(value, project) {\n            return (\n              <Pin\n                checked={project.pin}\n                onCheckedChange={pinProject(project.id)}\n              />\n            );\n          },\n        },\n        {\n          title: \"名称\",\n          dataIndex: \"name\",\n          sorter: (a, b) => a.name.localeCompare(b.name),\n          render(value, project) {\n            return <Link to={String(project.id)}>{value}</Link>;\n          },\n        },\n        {\n          title: \"部门\",\n          dataIndex: \"organization\",\n        },\n        {\n          title: \"负责人\",\n          render(value, project) {\n            return (\n              <span>\n                {props.users.find((user) => user.id === project.personId)\n                  ?.name || \"未知\"}\n              </span>\n            );\n          },\n        },\n        {\n          title: \"创建时间\",\n          render(value, project) {\n            return (\n              <span>\n                {project.created\n                  ? dayjs(project.created).format(\"YYYY-MM-DD\")\n                  : \"无\"}\n              </span>\n            );\n          },\n        },\n        {\n          render(value, project) {\n            return <More project={project} />;\n          },\n        },\n      ]}\n      {...props}\n    />\n  );\n});\n\nexport default SearchList;\n"]},"metadata":{},"sourceType":"module"}