{"ast":null,"code":"import { baseUrl } from \"consts\";\nconst localStoreageKey = \"__auth-provider-token__\";\nexport const getToken = () => localStorage.getItem(localStoreageKey);\n\nconst handleUserResponse = ({\n  user\n}) => {\n  localStorage.setItem(localStoreageKey, user.token);\n  return user;\n}; // 登录api实现\n\n\nexport const login = data => {\n  return fetch(`${baseUrl}/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  }).then(async res => {\n    if (res && res.ok) {\n      // alert('登陆成功')\n      return handleUserResponse(await res.json());\n    } else {\n      return Promise.reject(await res.json());\n    }\n  });\n}; // 注册api实现\n\nexport const register = data => {\n  return fetch(`${baseUrl}/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  }).then(async res => {\n    if (res && res.ok) {\n      // alert('注册成功')\n      return handleUserResponse(await res.json());\n    } else {\n      return Promise.reject(await res.json());\n    }\n  });\n};\nexport const logout = async () => {\n  localStorage.removeItem(localStoreageKey);\n};","map":{"version":3,"sources":["/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/api/AuthProvider.ts"],"names":["baseUrl","localStoreageKey","getToken","localStorage","getItem","handleUserResponse","user","setItem","token","login","data","fetch","method","headers","body","JSON","stringify","then","res","ok","json","Promise","reject","register","logout","removeItem"],"mappings":"AAAA,SAASA,OAAT,QAAwB,QAAxB;AAQA,MAAMC,gBAAgB,GAAG,yBAAzB;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAMC,YAAY,CAACC,OAAb,CAAqBH,gBAArB,CAAvB;;AAEP,MAAMI,kBAAkB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA8B;AACvDH,EAAAA,YAAY,CAACI,OAAb,CAAqBN,gBAArB,EAAuCK,IAAI,CAACE,KAA5C;AACA,SAAOF,IAAP;AACD,CAHD,C,CAKA;;;AACA,OAAO,MAAMG,KAAK,GAAIC,IAAD,IAAsB;AACzC,SAAOC,KAAK,CAAE,GAAEX,OAAQ,QAAZ,EAAqB;AAC/BY,IAAAA,MAAM,EAAE,MADuB;AAE/BC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFsB;AAK/BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AALyB,GAArB,CAAL,CAMJO,IANI,CAMC,MAAOC,GAAP,IAAe;AACrB,QAAIA,GAAG,IAAIA,GAAG,CAACC,EAAf,EAAmB;AACjB;AACA,aAAOd,kBAAkB,CAAC,MAAMa,GAAG,CAACE,IAAJ,EAAP,CAAzB;AACD,KAHD,MAGO;AACL,aAAOC,OAAO,CAACC,MAAR,CAAe,MAAMJ,GAAG,CAACE,IAAJ,EAArB,CAAP;AACD;AACF,GAbM,CAAP;AAcD,CAfM,C,CAiBP;;AACA,OAAO,MAAMG,QAAQ,GAAIb,IAAD,IAAsB;AAC5C,SAAOC,KAAK,CAAE,GAAEX,OAAQ,WAAZ,EAAwB;AAClCY,IAAAA,MAAM,EAAE,MAD0B;AAElCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFyB;AAKlCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AAL4B,GAAxB,CAAL,CAMJO,IANI,CAMC,MAAOC,GAAP,IAAe;AACrB,QAAIA,GAAG,IAAIA,GAAG,CAACC,EAAf,EAAmB;AACjB;AACA,aAAOd,kBAAkB,CAAC,MAAMa,GAAG,CAACE,IAAJ,EAAP,CAAzB;AACD,KAHD,MAGO;AACL,aAAOC,OAAO,CAACC,MAAR,CAAe,MAAMJ,GAAG,CAACE,IAAJ,EAArB,CAAP;AACD;AACF,GAbM,CAAP;AAcD,CAfM;AAiBP,OAAO,MAAMI,MAAM,GAAG,YAAY;AAChCrB,EAAAA,YAAY,CAACsB,UAAb,CAAwBxB,gBAAxB;AACD,CAFM","sourcesContent":["import { baseUrl } from \"consts\";\nimport { User } from \"types/User\";\n\nexport interface IAuthParam {\n  username: string;\n  password: string;\n}\n\nconst localStoreageKey = \"__auth-provider-token__\";\n\nexport const getToken = () => localStorage.getItem(localStoreageKey);\n\nconst handleUserResponse = ({ user }: { user: User }) => {\n  localStorage.setItem(localStoreageKey, user.token);\n  return user;\n};\n\n// 登录api实现\nexport const login = (data: IAuthParam) => {\n  return fetch(`${baseUrl}/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then(async (res) => {\n    if (res && res.ok) {\n      // alert('登陆成功')\n      return handleUserResponse(await res.json());\n    } else {\n      return Promise.reject(await res.json());\n    }\n  });\n};\n\n// 注册api实现\nexport const register = (data: IAuthParam) => {\n  return fetch(`${baseUrl}/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then(async (res) => {\n    if (res && res.ok) {\n      // alert('注册成功')\n      return handleUserResponse(await res.json());\n    } else {\n      return Promise.reject(await res.json());\n    }\n  });\n};\n\nexport const logout = async () => {\n  localStorage.removeItem(localStoreageKey);\n};\n"]},"metadata":{},"sourceType":"module"}