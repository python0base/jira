{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\n/*\n * @Descripttion: 看板相关接口请求\n * @Author: huangjitao\n * @Date: 2021-07-17 11:04:02\n * @Function: 该文件用途描述\n */\nimport { useMutation, useQuery } from \"react-query\";\nimport { useHttp } from \"utils/http\";\nimport { useAddOptimistic, useDeleteOptimistic, useReorderKanbanOptimistic } from \"utils/useOptimistic\";\nexport const useKanbans = param => {\n  _s();\n\n  const httpFetch = useHttp();\n  return useQuery([\"kanbans\", param], () => httpFetch(\"kanbans\", {\n    data: param\n  }));\n};\n\n_s(useKanbans, \"6F6Tcaq4EAsyXXn1KZ+lav+As8A=\", false, function () {\n  return [useHttp, useQuery];\n});\n\nexport const useAddKanban = queryKey => {\n  _s2();\n\n  const httpFetch = useHttp();\n  return useMutation(params => httpFetch(`kanbans`, {\n    data: params,\n    method: \"POST\"\n  }), useAddOptimistic(queryKey));\n};\n\n_s2(useAddKanban, \"eAMd67Ii2oCayBd1L+KMNKGAnrI=\", false, function () {\n  return [useHttp, useMutation, useAddOptimistic];\n});\n\nexport const useDeleteKanban = queryKey => {\n  _s3();\n\n  const httpFetch = useHttp();\n  return useMutation(({\n    id\n  }) => httpFetch(`kanbans/${id}`, {\n    method: \"DELETE\"\n  }), useDeleteOptimistic(queryKey));\n};\n\n_s3(useDeleteKanban, \"3Y+bzaRGKtWfjfNRtbE/BdUkTlM=\", false, function () {\n  return [useHttp, useMutation, useDeleteOptimistic];\n});\n\nexport const useReorderKanban = queryKey => {\n  _s4();\n\n  const httpFetch = useHttp();\n  return useMutation(params => httpFetch(\"kanbans/reorder\", {\n    data: params,\n    method: \"POST\"\n  }), useReorderKanbanOptimistic(queryKey));\n};\n\n_s4(useReorderKanban, \"tZ1Ljm4nHxibi0qqVxqvtrtneLI=\", false, function () {\n  return [useHttp, useMutation, useReorderKanbanOptimistic];\n});","map":{"version":3,"sources":["/Users/haoyan/reactpro/项目/jira项目/fake-jira-main/src/api/Kanban.ts"],"names":["useMutation","useQuery","useHttp","useAddOptimistic","useDeleteOptimistic","useReorderKanbanOptimistic","useKanbans","param","httpFetch","data","useAddKanban","queryKey","params","method","useDeleteKanban","id","useReorderKanban"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,SAAmBA,WAAnB,EAAgCC,QAAhC,QAAgD,aAAhD;AAGA,SAASC,OAAT,QAAwB,YAAxB;AACA,SACEC,gBADF,EAEEC,mBAFF,EAGEC,0BAHF,QAIO,qBAJP;AAMA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAA6B;AAAA;;AACrD,QAAMC,SAAS,GAAGN,OAAO,EAAzB;AAEA,SAAOD,QAAQ,CAAW,CAAC,SAAD,EAAYM,KAAZ,CAAX,EAA+B,MAC5CC,SAAS,CAAC,SAAD,EAAY;AAAEC,IAAAA,IAAI,EAAEF;AAAR,GAAZ,CADI,CAAf;AAGD,CANM;;GAAMD,U;UACOJ,O,EAEXD,Q;;;AAKT,OAAO,MAAMS,YAAY,GAAIC,QAAD,IAAwB;AAAA;;AAClD,QAAMH,SAAS,GAAGN,OAAO,EAAzB;AACA,SAAOF,WAAW,CACfY,MAAD,IACEJ,SAAS,CAAE,SAAF,EAAY;AACnBC,IAAAA,IAAI,EAAEG,MADa;AAEnBC,IAAAA,MAAM,EAAE;AAFW,GAAZ,CAFK,EAMhBV,gBAAgB,CAACQ,QAAD,CANA,CAAlB;AAQD,CAVM;;IAAMD,Y;UACOR,O,EACXF,W,EAMLG,gB;;;AAIJ,OAAO,MAAMW,eAAe,GAAIH,QAAD,IAAwB;AAAA;;AACrD,QAAMH,SAAS,GAAGN,OAAO,EAAzB;AAEA,SAAOF,WAAW,CAChB,CAAC;AAAEe,IAAAA;AAAF,GAAD,KACEP,SAAS,CAAE,WAAUO,EAAG,EAAf,EAAkB;AACzBF,IAAAA,MAAM,EAAE;AADiB,GAAlB,CAFK,EAKhBT,mBAAmB,CAACO,QAAD,CALH,CAAlB;AAOD,CAVM;;IAAMG,e;UACOZ,O,EAEXF,W,EAKLI,mB;;;AAeJ,OAAO,MAAMY,gBAAgB,GAAIL,QAAD,IAAwB;AAAA;;AACtD,QAAMH,SAAS,GAAGN,OAAO,EAAzB;AACA,SAAOF,WAAW,CACfY,MAAD,IACEJ,SAAS,CAAC,iBAAD,EAAoB;AAC3BC,IAAAA,IAAI,EAAEG,MADqB;AAE3BC,IAAAA,MAAM,EAAE;AAFmB,GAApB,CAFK,EAMhBR,0BAA0B,CAACM,QAAD,CANV,CAAlB;AAQD,CAVM;;IAAMK,gB;UACOd,O,EACXF,W,EAMLK,0B","sourcesContent":["/*\n * @Descripttion: 看板相关接口请求\n * @Author: huangjitao\n * @Date: 2021-07-17 11:04:02\n * @Function: 该文件用途描述\n */\n\nimport { QueryKey, useMutation, useQuery } from \"react-query\";\nimport { Kanban } from \"types/Kanban\";\n\nimport { useHttp } from \"utils/http\";\nimport {\n  useAddOptimistic,\n  useDeleteOptimistic,\n  useReorderKanbanOptimistic,\n} from \"utils/useOptimistic\";\n\nexport const useKanbans = (param?: Partial<Kanban>) => {\n  const httpFetch = useHttp();\n\n  return useQuery<Kanban[]>([\"kanbans\", param], () =>\n    httpFetch(\"kanbans\", { data: param })\n  );\n};\n\nexport const useAddKanban = (queryKey: QueryKey) => {\n  const httpFetch = useHttp();\n  return useMutation(\n    (params: Partial<Kanban>) =>\n      httpFetch(`kanbans`, {\n        data: params,\n        method: \"POST\",\n      }),\n    useAddOptimistic(queryKey)\n  );\n};\n\nexport const useDeleteKanban = (queryKey: QueryKey) => {\n  const httpFetch = useHttp();\n\n  return useMutation(\n    ({ id }: { id: number }) =>\n      httpFetch(`kanbans/${id}`, {\n        method: \"DELETE\",\n      }),\n    useDeleteOptimistic(queryKey)\n  );\n};\n\nexport interface SortProps {\n  // 要重新排序的 item\n  fromId: number;\n  // 目标 item\n  referenceId: number;\n  // 放在目标item的前还是后\n  type: \"before\" | \"after\";\n  fromKanbanId?: number;\n  toKanbanId?: number;\n}\n\nexport const useReorderKanban = (queryKey: QueryKey) => {\n  const httpFetch = useHttp();\n  return useMutation(\n    (params: SortProps) =>\n      httpFetch(\"kanbans/reorder\", {\n        data: params,\n        method: \"POST\",\n      }),\n    useReorderKanbanOptimistic(queryKey)\n  );\n};\n"]},"metadata":{},"sourceType":"module"}